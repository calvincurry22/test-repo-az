{"version":3,"sources":["providers/UserProvider.js","providers/ViolationCategoryProvider.js","providers/AuditViolationProvider.js","providers/EmployeeProvider.js","providers/CredentialProvider.js","components/SideNav.js","components/foodSafetyResources/FoodSafetyResources.js","components/employee/EmployeeDeleteModal.js","components/employee/EmployeeCreateForm.js","components/employee/EmployeeCreateModal.js","components/employee/EmployeeEditForm.js","components/employee/EmployeeEditModal.js","components/credential/CredentialCreateForm.js","components/credential/CredentialCreateModal.js","components/credential/CredentialEditForm.js","components/credential/CredentialEditModal.js","components/credential/CredentialInfo.js","components/employee/Employee.js","components/credential/CredentialList.js","components/account/AccountImageUpload.js","components/account/AccountEditForm.js","components/audit/Review.js","components/audit/AuditForm.js","components/audit/AuditViolationsForm.js","providers/AuditProvider.js","components/audit/AuditCreateForm.js","components/audit/AuditDetailsCharts.js","components/audit/AuditDetails.js","components/employee/DashboardEmployee.js","components/credential/CredentialDashboardView.js","components/foodSafetyResources/DashboardResources.js","components/audit/AuditDashboardChart.js","providers/TaskProvider.js","components/task/TaskProgress.js","components/dashboard/Dashboard.js","components/audit/Audit.js","components/audit/AuditList.js","components/task/TaskCreateForm.js","components/task/TaskCreateModal.js","components/task/CompletedTask.js","components/task/TaskEditForm.js","components/task/TaskEditModal.js","components/task/Task.js","components/task/TaskList.js","components/Register.js","components/Login.js","components/ApplicationViews.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserProvider","props","currentUser","sessionStorage","getItem","useState","user","isLoggedIn","setIsLoggedIn","isFirebaseReady","setIsFirebaseReady","users","setUsers","useEffect","firebase","onAuthStateChanged","u","getToken","getIdToken","getUserProfile","firebaseUserId","then","token","fetch","method","headers","Authorization","resp","json","saveUser","body","JSON","stringify","Provider","value","login","email","pw","signInWithEmailAndPassword","signInResponse","uid","userProfile","setItem","logout","signOut","clear","register","password","createUserWithEmailAndPassword","createResponse","savedUser","updateUser","id","getAllUserProfiles","children","CircularProgress","className","ViolationCategoryContext","apiUrl","violationCategories","setViolationCategories","useContext","getAllViolationCategories","a","getViolationCategoryById","AuditViolationContext","auditViolations","setAuditViolations","getViolationsByAuditId","getViolationById","saveViolation","violation","auditId","updateViolation","deleteViolation","violationId","EmployeeContext","employees","setEmployees","parse","getEmployeesByUserId","getEmployeeById","saveEmployee","employee","updateEmployee","deleteEmployee","employeeId","CredentialContext","credentials","getCredentialsByEmployeeId","useHistory","getCredentialById","saveCredential","credential","window","location","reload","updateCredential","deleteCredential","credentialId","useStyles","makeStyles","theme","root","display","large","width","spacing","height","toolbarIcon","alignItems","justifyContent","padding","mixins","toolbar","drawerPaper","position","whiteSpace","transition","transitions","create","easing","sharp","duration","enteringScreen","drawerPaperClose","overflowX","leavingScreen","breakpoints","up","classes","history","open","setOpen","setUser","CssBaseline","Drawer","variant","paper","clsx","IconButton","onClick","console","log","Divider","hasOwnProperty","List","ListItem","ListItemAvatar","image","Avatar","src","ListItemText","primary","firstName","lastName","businessName","button","push","ListItemIcon","Backdrop","color","content","backgroundColor","flexGrow","overflow","container","paddingTop","paddingBottom","flexDirection","SideNav","Typography","align","Container","maxWidth","Grid","item","xs","sm","md","lg","Paper","target","rel","href","modal","palette","background","boxShadow","shadows","toggleDeleteEmployeeModal","deleteEmployeelModal","employeeToDelete","Modal","aria-labelledby","aria-describedby","fullName","Button","e","preventDefault","form","marginTop","submit","margin","right","toggleEmployeeModal","employeeTitle","setEmployeetitle","employeeLastName","setEmployeeLastName","employeeFirstName","setEmployeeFirstName","component","onSubmit","userId","title","TextField","onChange","autoComplete","name","required","fullWidth","label","autoFocus","type","employeeModal","EmployeeCreateForm","toggleEmployeeEditModal","employeeObj","updatedEmployee","setEmployee","handleControlledInputChange","event","newEmployee","Object","assign","defaultValue","employeeEditModal","EmployeeEditForm","toggleCredentialModal","renewalFee","setRenewalFee","credentialName","setCredentialName","Date","selectedDate","setSelectedDate","expirationDate","utils","DateFnsUtils","justify","disableToolbar","format","date","KeyboardButtonProps","credentialModal","CredentialCreateForm","toggleEditCredentialModal","credentialObj","React","updatedCredential","setCredential","newCredential","dateMod","milliseconds","getTime","timeOffset","getTimezoneOffset","formattedDate","toJSON","editCredentialModal","CredentialEditForm","setCredentialObj","toLocaleDateString","TableRow","TableCell","scope","Tooltip","setEmployeeObj","setEmployeeToDelete","setCredentials","aria-label","size","style","colSpan","Collapse","in","timeout","unmountOnExit","Box","gutterBottom","Table","TableHead","TableBody","map","c","CredentialInfo","key","tableContainer","table","newEmployeeButton","marginLeft","setCredentialModal","setDeleteEmployeeModal","setEditCredentialModal","setEmployeeModal","setEmployeeEditModal","TableContainer","Employee","EmployeeCreateModal","CredentialCreateModal","CredentialEditModal","EmployeeEditModal","EmployeeDeleteModal","setImageUrl","setImage","loading","setLoading","uploadImage","files","data","FormData","append","res","file","secure_url","placeholder","alt","updatedUser","setUpdatedUser","imageUrl","newUser","goBack","length","foundUser","find","alert","replace","editUser","AccountImageUpload","audit","violations","auditDate","auditorName","score","passed","disablePadding","v","idx","category","violationCategoryId","Fragment","description","isCritical","setValue","setAudit","newAudit","parseInt","InputLabel","htmlFor","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","blankViolation","setViolations","useRef","handleViolationChange","updatedViolations","val","isCriticalId","rows","multiline","ref","inputProps","Select","native","AuditContext","audits","setAudits","getAuditsByUserId","getAuditById","saveAudit","r","updateAudit","deleteAudit","layout","marginRight","marginBottom","stepper","buttons","activeStep","setActiveStep","steps","handleNext","Stepper","Step","StepLabel","step","AuditForm","AuditViolationsForm","Review","Error","getStepContent","auditObj","violationArray","doughnutChartPercentages","doughnutChartCategoryNames","criticals","filter","nonCriticals","criticalsPercentage","Math","round","nonCriticalsPercentage","vc","check","percentage","pieData","labels","datasets","hoverBackgroundColor","doughnutData","options","text","fontSize","legend","gridContainer","backButton","progress","alignSelf","i","useParams","parsedId","Promise","all","fetchData","elevation","violationCategory","AuditDetailsCharts","gold","getContrastText","yellow","today","expiredList","secondary","DashboardEmployee","chartJsHeight","barChartView","toggleChartView","chartLabels","chartData","obj","month","auditDateLocaleString","monthNum","getMonth","year","getFullYear","test","fill","borderColor","scales","yAxes","ticks","stepSize","maxTicksLimit","beginAtZero","responsive","TaskContext","tasks","setTasks","completedTasks","setCompletedTasks","getTasksByUserId","getCompletedTasksByUserId","getIncompleteTasksByUserId","getTaskById","saveTask","task","updateTask","deleteTask","taskId","deleteCompletedTask","taskRatio","t","isCompleted","styles","path","stroke","strokeLinecap","trail","transform","transformOrigin","fixedHeight","chartHeight","resourcesHeight","fixedHeightPaper","chartHeightPaper","resourcesHeightPaper","AuditDashboardChart","DashboardResources","TaskProgress","CredentialDashboardView","newRecordButton","toggleTaskModal","setEmployeeId","taskText","setTaskText","formControl","taskModal","TaskCreateForm","deleteButton","bottom","minWidth","toggleEditTaskModal","taskObj","updatedTask","setTask","newTask","creationDate","editTaskModal","TaskEditForm","cardspace","minHeight","wordWrap","paddingLeft","setTaskObj","Checkbox","setTaskModal","viewingNewTasks","setViewingNewTasks","setEditTaskModal","viewButton","setViewButton","CompletedTask","TaskCreateModal","TaskEditModal","avatar","Register","setFirstName","setLastName","setEmail","setPassword","confirmPassword","setConfirmPassword","setBusinessName","to","Login","catch","ApplicationViews","setBarChartView","version","exact","TaskList","CredentialList","AuditList","AuditDetails","AuditCreateForm","AccountEditForm","menuButton","ButtonAppBar","AppBar","Toolbar","arrow","App","TaskProvider","EmployeeProvider","CredentialProvider","AuditProvider","AuditViolationProvider","ViolationCategoryProvider","Boolean","hostname","match","apiKey","process","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1b0e9aa1.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserProvider(props) {\r\n    const apiUrl = \"/api/user\";\r\n    const currentUser = sessionStorage.getItem(\"user\");\r\n    const [user, setUser] = useState({})\r\n    const [isLoggedIn, setIsLoggedIn] = useState(currentUser != null);\r\n    const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n    const [users, setUsers] = useState([])\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((u) => {\r\n            setIsFirebaseReady(true);\r\n        });\r\n    }, []);\r\n\r\n    const login = (email, pw) => {\r\n        return firebase.auth().signInWithEmailAndPassword(email, pw)\r\n            .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n            .then((userProfile) => sessionStorage.setItem(\"user\", JSON.stringify(userProfile)))\r\n            .then(() => setIsLoggedIn(true))\r\n    };\r\n\r\n    const logout = () => {\r\n        return firebase.auth().signOut()\r\n            .then(() => sessionStorage.clear())\r\n            .then(() => setIsLoggedIn(false))\r\n    };\r\n\r\n    const register = (user, password) => {\r\n        return firebase.auth().createUserWithEmailAndPassword(user.email, password)\r\n            .then((createResponse) => saveUser({ ...user, firebaseUserId: createResponse.user.uid }))\r\n            .then((savedUser) => sessionStorage.setItem(\"user\", JSON.stringify(savedUser)))\r\n            .then(() => setIsLoggedIn(true))\r\n    };\r\n\r\n    const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n    const getUserProfile = (firebaseUserId) => {\r\n        return getToken().then((token) =>\r\n            fetch(`api/user/${firebaseUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json()))\r\n    };\r\n\r\n    const getAllUserProfiles = () => {\r\n        return getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n        )\r\n            .then(setUsers)\r\n    }\r\n    const saveUser = (user) => {\r\n        return getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            }).then(resp => resp.json()));\r\n    };\r\n\r\n    const updateUser = (user) =>\r\n        getToken().then((token) =>\r\n            fetch(`${apiUrl}/${user.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(user),\r\n            }).then(() => getUserProfile(user.firebaseUserId))\r\n        );\r\n\r\n    return (\r\n        <UserContext.Provider value={{ isLoggedIn, user, login, logout, register, getToken, updateUser, getAllUserProfiles, getUserProfile, users }}>\r\n            {isFirebaseReady\r\n                ? props.children\r\n                : <CircularProgress className=\"app-spinner dark\" />}\r\n        </UserContext.Provider>\r\n    );\r\n}","import React, { useState, createContext, useContext } from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { UserContext } from './UserProvider';\r\n\r\nexport const ViolationCategoryContext = createContext();\r\n\r\nexport default (props) => {\r\n    const apiUrl = \"/api/violationCategory\"\r\n    const [violationCategories, setViolationCategories] = useState([])\r\n    const { getToken } = useContext(UserContext)\r\n\r\n    const getAllViolationCategories = async () => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n                .then(setViolationCategories)\r\n        )\r\n    };\r\n    const getViolationCategoryById = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n        )\r\n    };\r\n\r\n    return (\r\n        <ViolationCategoryContext.Provider\r\n            value={{\r\n                violationCategories,\r\n                getAllViolationCategories,\r\n                getViolationCategoryById\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ViolationCategoryContext.Provider>\r\n    );\r\n}","import React, { useState, createContext, useContext } from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { UserContext } from './UserProvider';\r\n\r\nexport const AuditViolationContext = createContext();\r\n\r\nexport default (props) => {\r\n    const apiUrl = \"/api/auditViolation\"\r\n    const [auditViolations, setAuditViolations] = useState([])\r\n    const { getToken } = useContext(UserContext)\r\n\r\n    const getViolationsByAuditId = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/getByAudit/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n                .then(setAuditViolations)\r\n        )\r\n    };\r\n\r\n    const getViolationById = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n        )\r\n    };\r\n\r\n    const saveViolation = async (violation) => {\r\n        await getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(violation)\r\n            }).then(() => getViolationsByAuditId(violation.auditId))\r\n        );\r\n    };\r\n\r\n    const updateViolation = async (violation) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${violation.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(violation),\r\n            }).then(() => getViolationsByAuditId(violation.auditId))\r\n        )\r\n    }\r\n\r\n    const deleteViolation = async (violationId, auditId) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${violationId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => getViolationsByAuditId(auditId))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <AuditViolationContext.Provider\r\n            value={{\r\n                auditViolations,\r\n                getViolationsByAuditId,\r\n                getViolationById,\r\n                saveViolation,\r\n                updateViolation,\r\n                deleteViolation\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuditViolationContext.Provider>\r\n    );\r\n\r\n}","import React, { useState, createContext, useContext } from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { UserContext } from './UserProvider';\r\n\r\nexport const EmployeeContext = createContext();\r\n\r\nexport default (props) => {\r\n    const apiUrl = \"/api/employee\"\r\n    const [employees, setEmployees] = useState([])\r\n    const { getToken } = useContext(UserContext)\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n\r\n    const getEmployeesByUserId = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/getByUser/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n                .then(setEmployees)\r\n        )\r\n    };\r\n\r\n    const getEmployeeById = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n        )\r\n    };\r\n\r\n    const saveEmployee = async (employee) => {\r\n        await getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(employee)\r\n            }).then(() => getEmployeesByUserId(currentUser.id))\r\n        );\r\n    };\r\n\r\n    const updateEmployee = async (employee) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${employee.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(employee),\r\n            }).then(() => getEmployeesByUserId(currentUser.id))\r\n        )\r\n    }\r\n\r\n    const deleteEmployee = async (employeeId) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${employeeId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => getEmployeesByUserId(currentUser.id))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <EmployeeContext.Provider\r\n            value={{\r\n                employees,\r\n                getEmployeesByUserId,\r\n                getEmployeeById,\r\n                saveEmployee,\r\n                updateEmployee,\r\n                deleteEmployee\r\n            }}\r\n        >\r\n            {props.children}\r\n        </EmployeeContext.Provider>\r\n    );\r\n\r\n}","import React, { useState, createContext, useContext } from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { UserContext } from './UserProvider';\r\nimport { EmployeeContext } from './EmployeeProvider';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const CredentialContext = createContext();\r\n\r\nexport default (props) => {\r\n    const apiUrl = \"/api/credential\"\r\n    const { getToken } = useContext(UserContext)\r\n    const [credentials, setCredentials] = useState([])\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    const { getEmployeesByUserId } = useContext(EmployeeContext)\r\n    const history = useHistory()\r\n\r\n    const getCredentialsByEmployeeId = async (id) => {\r\n        return await getToken().then((token) =>\r\n            fetch(`${apiUrl}/getByEmployee/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n        )\r\n    };\r\n\r\n    const getCredentialById = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n        )\r\n    };\r\n\r\n    const saveCredential = async (credential) => {\r\n        await getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(credential)\r\n            }).then(() => window.location.reload(true))\r\n        );\r\n    };\r\n\r\n    const updateCredential = async (credential) => {\r\n        return await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${credential.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(credential),\r\n            }).then(() => window.location.reload(true))\r\n        )\r\n    }\r\n\r\n    const deleteCredential = async (credentialId) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${credentialId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => window.location.reload(true))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <CredentialContext.Provider\r\n            value={{\r\n                credentials,\r\n                getCredentialsByEmployeeId,\r\n                getCredentialById,\r\n                saveCredential,\r\n                updateCredential,\r\n                deleteCredential\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CredentialContext.Provider>\r\n    );\r\n\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';\r\nimport LibraryBooksOutlinedIcon from '@material-ui/icons/LibraryBooksOutlined';\r\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\r\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\r\nimport CardMembershipIcon from '@material-ui/icons/CardMembership';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { UserContext } from '../providers/UserProvider';\r\nimport TimelineIcon from '@material-ui/icons/Timeline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport { useHistory } from 'react-router-dom';\r\nimport \"./dashboard/Dashboard.css\";\r\nimport clsx from 'clsx';\r\nimport {\r\n    List,\r\n    Avatar,\r\n    Backdrop,\r\n    ListItem,\r\n    ListItemText,\r\n    ListItemIcon,\r\n    ListItemAvatar,\r\n    CircularProgress\r\n} from '@material-ui/core';\r\n\r\nconst drawerWidth = 270;\r\n//test comment\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    large: {\r\n        width: theme.spacing(8),\r\n        height: theme.spacing(8),\r\n    },\r\n    toolbarIcon: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-end',\r\n        padding: '0 8px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    drawerPaper: {\r\n        position: 'relative',\r\n        whiteSpace: 'nowrap',\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    drawerPaperClose: {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(9),\r\n        },\r\n    }\r\n}));\r\n\r\n\r\nexport default () => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const [open, setOpen] = useState(true)\r\n    const [user, setUser] = useState({})\r\n    const { logout, getUserProfile } = useContext(UserContext)\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n\r\n    useEffect(() => {\r\n        getUserProfile(currentUser.firebaseUserId)\r\n            .then(setUser)\r\n    }, [])\r\n\r\n    const handleDrawerClose = () => {\r\n        console.log(user)\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                classes={{\r\n                    paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n            >\r\n                <div className={classes.toolbarIcon}>\r\n                    <IconButton onClick={handleDrawerClose}>\r\n                        {open\r\n                            ? <ChevronLeftIcon />\r\n                            : <ChevronRightIcon />\r\n                        }\r\n                    </IconButton>\r\n                </div>\r\n                <Divider />\r\n                {user.hasOwnProperty('firstName') ?\r\n                    <List>\r\n                        <ListItem className=\"avatar\">\r\n                            <ListItemAvatar>\r\n                                {user.image ?\r\n                                    <Avatar\r\n                                        className={classes.large}\r\n                                        src={user.image}\r\n                                    />\r\n                                    :\r\n                                    <Avatar\r\n                                        className={classes.large}\r\n                                        src=\"https://www.ekahiornish.com/wp-content/uploads/2018/07/default-avatar-profile-icon-vector-18942381.jpg\"\r\n                                    />\r\n                                }\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={user.firstName + \" \" + user.lastName} />\r\n                            <ListItemText primary={user.businessName} />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className=\"menuItems\"\r\n                            button\r\n                            onClick={() => history.push(\"/\")}>\r\n                            <ListItemIcon>\r\n                                <DashboardOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Dashboard\" />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className=\"menuItems\"\r\n                            button\r\n                            onClick={() => history.push(\"/audits\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <TimelineIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Audit Records\" />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className=\"menuItems\"\r\n                            button\r\n                            onClick={() => history.push(\"/credentials\")}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <CardMembershipIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Employee Credentials\" />\r\n                        </ListItem>\r\n                        <ListItem\r\n                            className=\"menuItems\"\r\n                            button\r\n                            onClick={() => history.push(\"/tasks\")}>\r\n                            <ListItemIcon>\r\n                                <AssignmentTurnedInOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Manage Tasks\" />\r\n                        </ListItem >\r\n                        <ListItem className=\"menuItems\" button onClick={() => history.push(\"/resources\")}>\r\n                            <ListItemIcon>\r\n                                <LibraryBooksOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Food Safety Resources\" />\r\n                        </ListItem>\r\n                        <ListItem className=\"menuItems\" button>\r\n                            <ListItemIcon>\r\n                                <ExitToAppOutlinedIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary=\"Logout\" onClick={logout} />\r\n                        </ListItem>\r\n                    </List>\r\n                    : <Backdrop open={open}>\r\n                        <CircularProgress color=\"primary\" />\r\n                    </Backdrop>\r\n                }\r\n            </Drawer>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport SideNav from '../SideNav';\r\nimport './FoodSafetyResources.css';\r\nimport { Grid, Typography, Paper, makeStyles, Container } from '@material-ui/core';\r\n\r\nconst drawerWidth = 270;\r\n//test comment\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        backgroundColor: \"#EBECF0\",\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    }\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles()\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <SideNav />\r\n                <main className={classes.content}>\r\n                    <br />\r\n                    <Typography variant=\"h4\" align=\"center\"> Food Safety Resources</Typography>\r\n                    <Container maxWidth=\"lg\" className={classes.container}>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                <Paper className={classes.paper}>\r\n                                    <Typography variant=\"h5\">\r\n                                        <a\r\n                                            className=\"resourcePageLinks\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href=\"https://www.fda.gov/media/137867/download\"\r\n                                        >\r\n                                            COVID-19 Re-opening Food Safety Checklist\r\n                                        </a>\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        A checklist that can be used to verify that important\r\n                                        food safety practices have been considered when in the\r\n                                        process of re-starting your business during the COVID-19 pandemic.\r\n                                    </Typography>\r\n                                </Paper>\r\n                                <br />\r\n                                <Paper className={classes.paper}>\r\n                                    <Typography variant=\"h5\">\r\n                                        <a\r\n                                            className=\"resourcePageLinks\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href=\"https://www.fda.gov/food/fda-food-code/state-retail-and-food-service-codes-and-regulations-state\"\r\n                                        >\r\n                                            Food Safety Regulations by state\r\n                                        </a>\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Information on all food safety regulations by US state\r\n                                </Typography>\r\n                                </Paper>\r\n                                <br />\r\n                                <Paper className={classes.paper}>\r\n                                    <Typography variant=\"h5\">\r\n                                        <a\r\n                                            className=\"resourcePageLinks\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href=\"https://www.fsis.usda.gov/wps/portal/fsis/topics/food-safety-education/get-answers/food-safety-fact-sheets\"\r\n                                        >\r\n                                            Food Safety Fact Sheets\r\n                                        </a>\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        This page provides multiple fact sheets that give quick tips\r\n                                        on topic such as: properly handling of potentially hazardous foods,\r\n                                        how to properly use thermometers, foodborne illness info, etc.\r\n                                </Typography>\r\n                                </Paper>\r\n                                <br />\r\n                                <Paper className={classes.paper}>\r\n                                    <Typography variant=\"h5\">\r\n                                        <a\r\n                                            className=\"resourcePageLinks\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href=\"https://www.fsis.usda.gov/wps/portal/fsis/topics/food-safety-education/get-answers/food-safety-fact-sheets/!ut/p/a1/jY_RCoJAFES_pQ9Y7jVN8lGEUEtFpNr2JZbaVaFccZeivj6jpyLLO08XzswwwIACa_ilLrmpVcNPz5-5e8zRtbwA48yzFhilmzxbBgHOi1kP7H4AqT3SP3A-_vPHIwqmXRIkJbCWm4rUjVRAS2EIb_RVdBqoVOpINJfC3IjkB0N0JYTRsAX2no5Wryi1CyeMUxsz5xP4Mv8FDO9rz2t6X4VYR_7kAeoGtjg!/?1dmy&urile=wcm%3apath%3a%2FFSIS-Content%2Finternet%2Fmain%2Ftopics%2Ffood-safety-education\"\r\n                                        >\r\n                                            Food Safety Education\r\n                                        </a>\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        A great resource for furthuring food safety knowledge.\r\n                                        Here you can find educational materials that can be used\r\n                                        to train your staff on food safety fundamentals.\r\n                                    </Typography>\r\n                                </Paper>\r\n                                <br />\r\n                                <Paper className={classes.paper}>\r\n                                    <Typography variant=\"h5\">\r\n                                        <a\r\n                                            className=\"resourcePageLinks\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href=\"https://www.fsis.usda.gov/wps/portal/fsis/topics/recalls-and-public-health-alerts/current-recalls-and-alerts\"\r\n                                        >\r\n                                            USDA Recalls\r\n                                        </a>\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Up-to-date record of all UDSA food recalls\r\n                                    </Typography>\r\n                                </Paper>\r\n                                <br />\r\n                                <Paper className={classes.paper}>\r\n                                    <Typography variant=\"h5\">\r\n                                        <a\r\n                                            className=\"resourcePageLinks\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href=\"https://www.fda.gov/safety/recalls-market-withdrawals-safety-alerts\"\r\n                                        >\r\n                                            FDA Recalls\r\n                                        </a>\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Up-to-date record of all FDA food recalls\r\n                                    </Typography>\r\n                                </Paper>\r\n                                <br />\r\n                                <Paper className={classes.paper}>\r\n                                    <Typography variant=\"h5\">\r\n                                        <a\r\n                                            className=\"resourcePageLinks\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href=\"https://www.fda.gov/food/guidance-regulation-food-and-dietary-supplements/hazard-analysis-critical-control-point-haccp\"\r\n                                        >\r\n                                            HACCP Information\r\n                                        </a>\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        A helpful resource that can be referenced when creating\r\n                                        a HACCP plan for your establishment.\r\n                                    </Typography>\r\n                                </Paper>\r\n                                <br />\r\n                                <Paper className={classes.paper}>\r\n                                    <Typography variant=\"h5\">\r\n                                        <a\r\n                                            className=\"resourcePageLinks\"\r\n                                            target=\"_blank\"\r\n                                            rel=\"noopener noreferrer\"\r\n                                            href=\"https://www.business.com/articles/guide-to-food-handler-safety-certifications/\"\r\n                                        >\r\n                                            Restaurant Food Handler Certification Guide\r\n                                        </a>\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                        Information regarding certifications required to operate a food establishment\r\n                                    </Typography>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                </main>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { Typography, Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default ({ deleteEmployee, toggleDeleteEmployeeModal, deleteEmployeelModal, employeeToDelete }) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={deleteEmployeelModal}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <Typography>\r\n                        Are you sure you want to delete {employeeToDelete.fullName} ?\r\n                    </Typography>\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        onClick={toggleDeleteEmployeeModal}\r\n                    >\r\n                        Cancel\r\n                    </Button>\r\n                    <Button\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                            deleteEmployee(employeeToDelete.id)\r\n                            toggleDeleteEmployeeModal()\r\n                        }}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Container, makeStyles, Grid, TextField, Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        position: 'relative',\r\n        right: 0\r\n    },\r\n}));\r\n\r\nexport default ({ toggleEmployeeModal, currentUser, saveEmployee }) => {\r\n    const classes = useStyles()\r\n    const [employeeTitle, setEmployeetitle] = useState(\"\")\r\n    const [employeeLastName, setEmployeeLastName] = useState(\"\")\r\n    const [employeeFirstName, setEmployeeFirstName] = useState(\"\")\r\n\r\n    const createNewEmployee = () => {\r\n        saveEmployee({\r\n            firstName: employeeFirstName,\r\n            lastName: employeeLastName,\r\n            userId: currentUser.id,\r\n            title: employeeTitle\r\n        });\r\n        toggleEmployeeModal()\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <form className={classes.form} onSubmit={e => {\r\n                e.preventDefault()\r\n                createNewEmployee()\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={e => setEmployeeFirstName(e.target.value)}\r\n                            autoComplete=\"fname\"\r\n                            name=\"firstName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"firstName\"\r\n                            label=\"First Name\"\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={e => setEmployeeLastName(e.target.value)}\r\n                            autoComplete=\"lname\"\r\n                            name=\"lastName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"lastName\"\r\n                            label=\"Last Name\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={e => setEmployeetitle(e.target.value)}\r\n                            autoComplete=\"title\"\r\n                            name=\"title\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    className={classes.submit}\r\n                >\r\n                    Save\r\n                </Button>\r\n            </form>\r\n        </Container >\r\n    )\r\n}","import React from 'react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EmployeeCreateForm from './EmployeeCreateForm';\r\nimport { IconButton } from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        // border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default ({ saveEmployee, toggleEmployeeModal, employeeModal, currentUser }) => {\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={employeeModal}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <IconButton onClick={toggleEmployeeModal}>\r\n                        <CloseOutlinedIcon />\r\n                    </IconButton>\r\n                    <h2 id=\"transition-modal-title\">New Employee</h2>\r\n                    <EmployeeCreateForm\r\n                        toggleEmployeeModal={toggleEmployeeModal}\r\n                        currentUser={currentUser}\r\n                        saveEmployee={saveEmployee}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Container, makeStyles, Grid, TextField, Button } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default ({ toggleEmployeeEditModal, updateEmployee, employeeObj }) => {\r\n    const [updatedEmployee, setEmployee] = useState(employeeObj)\r\n    const classes = useStyles()\r\n\r\n    const editEmployee = () => {\r\n        updateEmployee({\r\n            id: updatedEmployee.id,\r\n            firstName: updatedEmployee.firstName,\r\n            lastName: updatedEmployee.lastName,\r\n            userId: updatedEmployee.userId,\r\n            title: updatedEmployee.title\r\n        })\r\n        toggleEmployeeEditModal()\r\n    }\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newEmployee = Object.assign({}, updatedEmployee)\r\n        newEmployee[event.target.name] = event.target.value\r\n        setEmployee(newEmployee)\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <form className={classes.form}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={handleControlledInputChange}\r\n                            autoComplete=\"fname\"\r\n                            name=\"firstName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            defaultValue={employeeObj.firstName}\r\n                            fullWidth\r\n                            id=\"empFirstName\"\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={handleControlledInputChange}\r\n                            autoComplete=\"lname\"\r\n                            name=\"lastName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            defaultValue={employeeObj.lastName}\r\n                            fullWidth\r\n                            id=\"empLastName\"\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={handleControlledInputChange}\r\n                            autoComplete=\"title\"\r\n                            name=\"title\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            defaultValue={employeeObj.title}\r\n                            fullWidth\r\n                            id=\"empTitle\"\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                className={classes.submit}\r\n                onClick={editEmployee}\r\n            >\r\n                Save\r\n            </Button>\r\n        </Container >\r\n    )\r\n}","import React from 'react';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport EmployeeEditForm from './EmployeeEditForm';\r\nimport { IconButton } from '@material-ui/core';\r\nimport Modal from '@material-ui/core/Modal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default ({ toggleEmployeeEditModal, employeeEditModal, updateEmployee, employeeObj }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={employeeEditModal}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <IconButton onClick={toggleEmployeeEditModal}>\r\n                        <CloseOutlinedIcon />\r\n                    </IconButton>\r\n                    <h2 id=\"transition-modal-title\">Edit Employee</h2>\r\n                    <EmployeeEditForm\r\n                        toggleEmployeeEditModal={toggleEmployeeEditModal}\r\n                        updateEmployee={updateEmployee}\r\n                        employeeObj={employeeObj}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Container, makeStyles, Grid, TextField, Button } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nexport default ({ toggleCredentialModal, saveCredential, employeeObj }) => {\r\n    const classes = useStyles()\r\n    const [renewalFee, setRenewalFee] = useState(\"\")\r\n    const [credentialName, setCredentialName] = useState(\"\")\r\n    const [selectedDate, setSelectedDate] = useState(new Date())\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date)\r\n    }\r\n\r\n    const createNewCredential = () => {\r\n        saveCredential({\r\n            employeeId: employeeObj.id,\r\n            name: credentialName,\r\n            expirationDate: selectedDate,\r\n            renewalFee: renewalFee\r\n        });\r\n        toggleCredentialModal()\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <form className={classes.form} onSubmit={e => {\r\n                e.preventDefault()\r\n                createNewCredential()\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={e => setCredentialName(e.target.value)}\r\n                            autoComplete=\"cname\"\r\n                            id=\"credentialName\"\r\n                            variant=\"outlined\"\r\n                            name=\"name\"\r\n                            label=\"Name\"\r\n                            required\r\n                            fullWidth\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                onChange={e => setRenewalFee(e.target.value)}\r\n                                autoComplete=\"fee\"\r\n                                id=\"renewalFee\"\r\n                                variant=\"outlined\"\r\n                                name=\"renewalFee\"\r\n                                label=\"Renewal Fee\"\r\n                                required\r\n                                fullWidth\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <Grid container justify=\"space-around\">\r\n                                    <KeyboardDatePicker\r\n                                        disableToolbar\r\n                                        margin=\"normal\"\r\n                                        variant=\"inline\"\r\n                                        format=\"MM/dd/yyyy\"\r\n                                        id=\"expirationDate\"\r\n                                        value={selectedDate}\r\n                                        label=\"Set Expiration Date\"\r\n                                        onChange={handleDateChange}\r\n                                        KeyboardButtonProps={{\r\n                                            'aria-label': 'change date',\r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                        </Grid>\r\n                        <Button type=\"submit\" variant=\"contained\">Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CredentialCreateForm from './CredentialCreateForm';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(2, 4, 3),\r\n        boxShadow: theme.shadows[5],\r\n    },\r\n}));\r\n\r\nexport default ({ saveCredential, toggleCredentialModal, credentialModal, currentUser, employeeObj }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={credentialModal}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <IconButton onClick={toggleCredentialModal}>\r\n                        <CloseOutlinedIcon />\r\n                    </IconButton>\r\n                    <h2 id=\"transition-modal-title\">New Credential</h2>\r\n                    <CredentialCreateForm\r\n                        toggleCredentialModal={toggleCredentialModal}\r\n                        saveCredential={saveCredential}\r\n                        employeeObj={employeeObj}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { Container, makeStyles, Grid, TextField, Button } from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nexport default ({ toggleEditCredentialModal, updateCredential, credentialObj }) => {\r\n    const classes = useStyles()\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date(credentialObj.expirationDate));\r\n    const [updatedCredential, setCredential] = useState(credentialObj);\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        const dateMod = new Date(date)\r\n        const milliseconds = dateMod.getTime()\r\n        const timeOffset = dateMod.getTimezoneOffset() * 60000\r\n        const dateMinusOffset = (milliseconds - timeOffset)\r\n        const formattedDate = new Date(dateMinusOffset).toJSON()\r\n        const newCredential = Object.assign({}, updatedCredential);\r\n        newCredential.expirationDate = formattedDate;\r\n        setCredential(newCredential);\r\n    }\r\n\r\n    const editCredential = () => {\r\n        updateCredential({\r\n            id: updatedCredential.id,\r\n            employeeId: updatedCredential.employeeId,\r\n            name: updatedCredential.name,\r\n            expirationDate: updatedCredential.expirationDate,\r\n            renewalFee: updatedCredential.renewalFee\r\n        });\r\n        toggleEditCredentialModal()\r\n    }\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newCredential = Object.assign({}, updatedCredential);\r\n        newCredential[event.target.name] = event.target.value;\r\n        setCredential(newCredential);\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <form className={classes.form} onSubmit={e => {\r\n                e.preventDefault()\r\n                editCredential()\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={handleControlledInputChange}\r\n                            defaultValue={credentialObj.name}\r\n                            autoComplete=\"cname\"\r\n                            id=\"credentialName\"\r\n                            name=\"name\"\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={handleControlledInputChange}\r\n                            defaultValue={credentialObj.renewalFee}\r\n                            autoComplete=\"fee\"\r\n                            id=\"renewalFee\"\r\n                            name=\"renewalFee\"\r\n                            label=\"Renewal Fee\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    margin=\"normal\"\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    id=\"expirationDate\"\r\n                                    name=\"expirationDate\"\r\n                                    value={selectedDate}\r\n                                    onChange={handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                        <Button type=\"submit\" variant=\"contained\">Save</Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container >\r\n    )\r\n}","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CredentialEditForm from './CredentialEditForm';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default ({ toggleEditCredentialModal, editCredentialModal, updateCredential, credentialObj }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={editCredentialModal}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <IconButton onClick={toggleEditCredentialModal}>\r\n                        <CloseOutlinedIcon />\r\n                    </IconButton>\r\n                    <h2 id=\"transition-modal-title\">Edit Credential</h2>\r\n                    <CredentialEditForm\r\n                        toggleEditCredentialModal={toggleEditCredentialModal}\r\n                        updateCredential={updateCredential}\r\n                        credentialObj={credentialObj}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\r\nimport { IconButton, Tooltip } from '@material-ui/core';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\n\r\n\r\nexport default ({\r\n    credential,\r\n    setCredentialObj,\r\n    toggleEditCredentialModal,\r\n    deleteCredential,\r\n    employee\r\n}) => {\r\n\r\n    const date = new Date(credential.expirationDate).toLocaleDateString()\r\n\r\n    return (\r\n        <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n                {credential.name}\r\n            </TableCell>\r\n            <TableCell>{date}</TableCell>\r\n            <TableCell>{credential.renewalFee}</TableCell>\r\n            <TableCell align=\"right\">\r\n                <Tooltip title=\"Edit Credential\">\r\n                    <IconButton\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                            setCredentialObj(credential)\r\n                            toggleEditCredentialModal()\r\n                        }}\r\n                    >\r\n                        <EditOutlinedIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </TableCell>\r\n            <TableCell align=\"right\">\r\n                <Tooltip title=\"Delete Credential\">\r\n                    <IconButton\r\n                        onClick={e => {\r\n                            e.preventDefault()\r\n                            deleteCredential(credential.id, employee.id)\r\n                        }}\r\n                    >\r\n                        <DeleteForeverOutlinedIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </TableCell>\r\n        </TableRow>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport CredentialInfo from '../credential/CredentialInfo';\r\nimport { Typography, Button } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\n\r\nexport default ({\r\n    employee,\r\n    setEmployeeObj,\r\n    setCredentialObj,\r\n    deleteCredential,\r\n    setEmployeeToDelete,\r\n    toggleCredentialModal,\r\n    toggleEmployeeEditModal,\r\n    toggleEditCredentialModal,\r\n    toggleDeleteEmployeeModal,\r\n    getCredentialsByEmployeeId,\r\n}) => {\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const [credentials, setCredentials] = useState([])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        getCredentialsByEmployeeId(employee.id)\r\n            .then(setCredentials)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {employee &&\r\n                <>\r\n                    <TableRow>\r\n                        <TableCell>\r\n                            <IconButton\r\n                                aria-label=\"expand row\"\r\n                                size=\"small\"\r\n                                onClick={() => setOpen(!open)}\r\n                            >\r\n                                {open ? <KeyboardArrowUpIcon />\r\n                                    : <KeyboardArrowDownIcon />\r\n                                }\r\n                            </IconButton>\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\">\r\n                            {employee.firstName}\r\n                        </TableCell>\r\n                        <TableCell>{employee.lastName}</TableCell>\r\n                        <TableCell>{employee.title}</TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Button\r\n                                onClick={() => {\r\n                                    setEmployeeObj(employee)\r\n                                    toggleCredentialModal()\r\n                                }} variant=\"contained\"\r\n                            >\r\n                                Add Credential\r\n                           </Button>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={e => {\r\n                                    e.preventDefault()\r\n                                    setEmployeeObj(employee)\r\n                                    toggleEmployeeEditModal()\r\n                                }}\r\n                            >\r\n                                Edit\r\n                        </Button>\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                onClick={e => {\r\n                                    e.preventDefault()\r\n                                    setEmployeeToDelete(employee)\r\n                                    toggleDeleteEmployeeModal()\r\n                                }}\r\n                            >\r\n                                Delete\r\n                        </Button>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n                            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                                <Box margin={1}>\r\n                                    <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                                        <strong>Credentials</strong>\r\n                                    </Typography>\r\n                                    <Table size=\"small\" aria-label=\"purchases\">\r\n                                        <TableHead>\r\n                                            <TableRow>\r\n                                                <TableCell><strong>Title</strong></TableCell>\r\n                                                <TableCell><strong>Expiration Date</strong></TableCell>\r\n                                                <TableCell><strong>Renewal Fee</strong></TableCell>\r\n                                                <TableCell></TableCell>\r\n                                                <TableCell></TableCell>\r\n                                            </TableRow>\r\n                                        </TableHead>\r\n                                        <TableBody>\r\n                                            {credentials.map(c => (\r\n                                                <CredentialInfo\r\n                                                    key={c.id}\r\n                                                    credential={c}\r\n                                                    employee={employee}\r\n                                                    deleteCredential={deleteCredential}\r\n                                                    setCredentialObj={setCredentialObj}\r\n                                                    toggleCredentialModal={toggleCredentialModal}\r\n                                                    toggleEditCredentialModal={toggleEditCredentialModal}\r\n                                                />\r\n                                            ))}\r\n                                        </TableBody>\r\n                                    </Table>\r\n                                </Box>\r\n                            </Collapse>\r\n                        </TableCell>\r\n                    </TableRow>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Button, TableBody, TableHead, TableRow, TableCell, Table, TableContainer } from '@material-ui/core';\r\nimport { CredentialContext } from '../../providers/CredentialProvider';\r\nimport { EmployeeContext } from '../../providers/EmployeeProvider';\r\nimport EmployeeDeleteModal from '../employee/EmployeeDeleteModal';\r\nimport EmployeeCreateModal from '../employee/EmployeeCreateModal';\r\nimport EmployeeEditModal from '../employee/EmployeeEditModal';\r\nimport CredentialCreateModal from './CredentialCreateModal';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport CredentialEditModal from './CredentialEditModal';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Employee from '../employee/Employee';\r\nimport SideNav from '../SideNav';\r\n\r\n\r\nconst drawerWidth = 270;\r\n//test comment\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        backgroundColor: 'whitesmoke'\r\n    },\r\n    content: {\r\n        backgroundColor: \"#EBECF0\",\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        paddingTop: 10\r\n    },\r\n    tableContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    table: {\r\n        maxWidth: 1300\r\n    },\r\n    newEmployeeButton: {\r\n        marginLeft: '2%'\r\n    }\r\n}));\r\n\r\nexport default () => {\r\n    const { getCredentialsByEmployeeId, saveCredential, updateCredential, deleteCredential } = useContext(CredentialContext)\r\n    const { getEmployeesByUserId, saveEmployee, updateEmployee, deleteEmployee, employees } = useContext(EmployeeContext)\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    const [credentialModal, setCredentialModal] = useState(false)\r\n    const toggleCredentialModal = () => setCredentialModal(!credentialModal)\r\n    const [credentialObj, setCredentialObj] = useState({})\r\n    const [deleteEmployeelModal, setDeleteEmployeeModal] = useState(false)\r\n    const toggleDeleteEmployeeModal = () => setDeleteEmployeeModal(!deleteEmployeelModal)\r\n    const [editCredentialModal, setEditCredentialModal] = useState(false)\r\n    const toggleEditCredentialModal = () => setEditCredentialModal(!editCredentialModal)\r\n    const [employeeModal, setEmployeeModal] = useState(false)\r\n    const toggleEmployeeModal = () => setEmployeeModal(!employeeModal)\r\n    const [employeeEditModal, setEmployeeEditModal] = useState(false)\r\n    const toggleEmployeeEditModal = () => setEmployeeEditModal(!employeeEditModal)\r\n    const [employeeToDelete, setEmployeeToDelete] = useState({})\r\n    const [employeeObj, setEmployeeObj] = useState({})\r\n    const classes = useStyles()\r\n\r\n\r\n    useEffect(() => {\r\n        getEmployeesByUserId(currentUser.id);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <SideNav />\r\n                <main className={classes.content}>\r\n                    <Typography\r\n                        variant=\"h4\"\r\n                        align=\"center\"\r\n                    >\r\n                        Manage Employee Credentials\r\n                    </Typography>\r\n                    <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        className={classes.newEmployeeButton}\r\n                        onClick={toggleEmployeeModal}\r\n                    >\r\n                        New Employee\r\n                    </Button>\r\n                    <TableContainer className={classes.tableContainer}>\r\n                        <Table aria-label=\"collapsible table\" className={classes.table}>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell />\r\n                                    <TableCell><strong>First Name</strong></TableCell>\r\n                                    <TableCell><strong>Last Name</strong></TableCell>\r\n                                    <TableCell><strong>Title</strong></TableCell>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell></TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {employees.map(e => (\r\n                                    <Employee\r\n                                        key={e.id}\r\n                                        employee={e}\r\n                                        setEmployeeToDelete={setEmployeeToDelete}\r\n                                        setEmployeeObj={setEmployeeObj}\r\n                                        setCredentialObj={setCredentialObj}\r\n                                        deleteCredential={deleteCredential}\r\n                                        toggleCredentialModal={toggleCredentialModal}\r\n                                        toggleEditCredentialModal={toggleEditCredentialModal}\r\n                                        toggleEmployeeEditModal={toggleEmployeeEditModal}\r\n                                        toggleDeleteEmployeeModal={toggleDeleteEmployeeModal}\r\n                                        getCredentialsByEmployeeId={getCredentialsByEmployeeId}\r\n                                    />\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                    <EmployeeCreateModal\r\n                        toggleEmployeeModal={toggleEmployeeModal}\r\n                        saveEmployee={saveEmployee}\r\n                        employeeModal={employeeModal}\r\n                        currentUser={currentUser}\r\n                    />\r\n                    <CredentialCreateModal\r\n                        toggleCredentialModal={toggleCredentialModal}\r\n                        credentialModal={credentialModal}\r\n                        saveCredential={saveCredential}\r\n                        employeeObj={employeeObj}\r\n                        currentUser={currentUser}\r\n                    />\r\n                    <CredentialEditModal\r\n                        toggleEditCredentialModal={toggleEditCredentialModal}\r\n                        editCredentialModal={editCredentialModal}\r\n                        updateCredential={updateCredential}\r\n                        credentialObj={credentialObj}\r\n                    />\r\n                    <EmployeeEditModal\r\n                        toggleEmployeeEditModal={toggleEmployeeEditModal}\r\n                        updateEmployee={updateEmployee}\r\n                        employeeEditModal={employeeEditModal}\r\n                        employeeObj={employeeObj}\r\n                    />\r\n                    <EmployeeDeleteModal\r\n                        deleteEmployeelModal={deleteEmployeelModal}\r\n                        toggleDeleteEmployeeModal={toggleDeleteEmployeeModal}\r\n                        deleteEmployee={deleteEmployee}\r\n                        employeeToDelete={employeeToDelete}\r\n                    />\r\n                </main>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useState } from \"react\"\r\nimport { Typography, TextField, Grid } from \"@material-ui/core\"\r\n\r\nexport default ({ setImageUrl }) => {\r\n    const [image, setImage] = useState('')\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const uploadImage = async e => {\r\n        const files = e.target.files\r\n        const data = new FormData()\r\n        data.append('file', files[0])\r\n        data.append('upload_preset', 'foodLocker')\r\n        setLoading(true)\r\n        const res = await fetch(\r\n            'https://api.cloudinary.com/v1_1/dxcf8k91m/image/upload',\r\n            {\r\n                method: 'POST',\r\n                body: data\r\n            }\r\n        )\r\n        const file = await res.json()\r\n        setImage(file.secure_url)\r\n        setLoading(false)\r\n        setImageUrl(file.secure_url)\r\n    }\r\n\r\n    return (\r\n        <Grid container>\r\n            <div className=\"imageUpload\">\r\n                <Typography>Upload Image</Typography>\r\n                <TextField\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    placeholder=\"Upload an image\"\r\n                    onChange={uploadImage}\r\n                />\r\n                {loading ? (\r\n                    <Typography>Loading...</Typography>\r\n                ) : (\r\n                        <img src={image} alt=\"avatar\" style={{ width: '300px' }} />\r\n                    )}\r\n            </div>\r\n        </Grid>\r\n    )\r\n}","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Button, CircularProgress } from '@material-ui/core';\r\nimport { UserContext } from \"../../providers/UserProvider\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AccountImageUpload from \"./AccountImageUpload\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    button: {\r\n        marginTop: \"1%\",\r\n        marginLeft: \"1%\"\r\n    }\r\n}));\r\n\r\n\r\nexport default () => {\r\n    const { updateUser, getAllUserProfiles, users, getUserProfile } = useContext(UserContext)\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    const [updatedUser, setUpdatedUser] = useState({});\r\n    const [imageUrl, setImageUrl] = useState('')\r\n    const [user, setUser] = useState({})\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const editUser = (e) => {\r\n        e.preventDefault();\r\n        if (imageUrl !== '') {\r\n            updateUser({\r\n                id: updatedUser.id,\r\n                firstName: updatedUser.firstName,\r\n                lastName: updatedUser.lastName,\r\n                email: updatedUser.email,\r\n                password: updatedUser.password,\r\n                businessName: updatedUser.businessName,\r\n                firebaseUserId: updatedUser.firebaseUserId,\r\n                image: imageUrl\r\n            })\r\n        } else {\r\n            updateUser(updatedUser)\r\n        }\r\n        alert(\"Account successfully updated!\");\r\n        history.replace(\"/\")\r\n    }\r\n\r\n    const existingEmailCheck = (e) => {\r\n        e.preventDefault()\r\n        if (users.length) {\r\n            const foundUser = users.find(u => u.email === updatedUser.email)\r\n            if (foundUser && foundUser.id !== updatedUser.id) {\r\n                alert(\"Error: Email already exists\")\r\n            } else {\r\n                editUser(e)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newUser = Object.assign({}, updatedUser);\r\n        newUser[event.target.name] = event.target.value;\r\n        setUpdatedUser(newUser);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllUserProfiles();\r\n        getUserProfile(currentUser.firebaseUserId)\r\n            .then(res => {\r\n                setUpdatedUser(res)\r\n                setUser(res)\r\n            });\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <>\r\n            {user.hasOwnProperty('firstName') ?\r\n                <>\r\n                    <Button\r\n                        onClick={() => history.goBack()}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.button}\r\n                    >\r\n                        Back\r\n            </Button>\r\n                    <Container component=\"main\" maxWidth=\"xs\">\r\n                        <CssBaseline />\r\n                        <div className={classes.paper}>\r\n                            <form className={classes.form} onSubmit={existingEmailCheck}>\r\n                                <Grid container spacing={2}>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            onChange={handleControlledInputChange}\r\n                                            autoComplete=\"fname\"\r\n                                            name=\"firstName\"\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"firstName\"\r\n                                            label=\"First Name\"\r\n                                            defaultValue={user.firstName}\r\n                                            autoFocus\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={6}>\r\n                                        <TextField\r\n                                            onChange={handleControlledInputChange}\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"lastName\"\r\n                                            label=\"Last Name\"\r\n                                            name=\"lastName\"\r\n                                            defaultValue={user.lastName}\r\n                                            autoComplete=\"lname\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            onChange={handleControlledInputChange}\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            id=\"email\"\r\n                                            label=\"Email Address\"\r\n                                            name=\"email\"\r\n                                            defaultValue={user.email}\r\n                                            autoComplete=\"email\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            onChange={handleControlledInputChange}\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"password\"\r\n                                            label=\"Password\"\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            defaultValue={user.password}\r\n                                            autoComplete=\"current-password\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <TextField\r\n                                            onChange={handleControlledInputChange}\r\n                                            variant=\"outlined\"\r\n                                            required\r\n                                            fullWidth\r\n                                            name=\"businessName\"\r\n                                            label=\"Business Name\"\r\n                                            type=\"businessName\"\r\n                                            id=\"businessName\"\r\n                                            defaultValue={user.businessName}\r\n                                            autoComplete=\"current-businessName\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item xs={12}>\r\n                                        <AccountImageUpload setImageUrl={setImageUrl} />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Button\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    className={classes.submit}\r\n                                >\r\n                                    Save Changes\r\n                                </Button>\r\n                            </form>\r\n                        </div>\r\n                    </Container>\r\n                </>\r\n                : <CircularProgress />\r\n            }\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport './Audit.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from '@material-ui/core/List';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    title: {\r\n        marginTop: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nexport default ({ audit, violationCategories, violations }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Review before submission\r\n            </Typography>\r\n            <div className=\"auditReviewPage\">\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                            Details\r\n                    </Typography>\r\n                        <Typography gutterBottom>Date: {audit.auditDate}</Typography>\r\n                        <Typography gutterBottom>Auditor Name: {audit.auditorName}</Typography>\r\n                        <Typography gutterBottom>Score: {audit.score}</Typography>\r\n                        <Typography gutterBottom>Passed?: {audit.passed === 'pass' ? \"Yes\" : \"No\"}</Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Typography variant=\"h6\" gutterBottom className={classes.title}>\r\n                    Violations\r\n                </Typography>\r\n                <List disablePadding>\r\n                    {violations.map((v, idx) => {\r\n                        const category = violationCategories.find(c => c.id === v.violationCategoryId)\r\n\r\n                        return (\r\n                            <React.Fragment key={v.id}>\r\n                                <Typography variant=\"h6\">Issue #{idx + 1}</Typography>\r\n                                <Typography>Description: {v.description}</Typography>\r\n                                <Typography>Category: {category.name}</Typography>\r\n                                <Typography>Critical Issue?: {v.isCritical}</Typography>\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </List>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { InputLabel, FormLabel, FormControl, Radio, RadioGroup } from '@material-ui/core';\r\n\r\nexport default ({ value, setValue, audit, setAudit }) => {\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newAudit = Object.assign({}, audit)\r\n        if (event.target.name === \"score\") {\r\n            newAudit[event.target.name] = parseInt(event.target.value);\r\n        } else {\r\n            newAudit[event.target.name] = event.target.value;\r\n        }\r\n        setAudit(newAudit);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n                Details\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={12}>\r\n                    <TextField\r\n                        required\r\n                        id=\"auditorName\"\r\n                        name=\"auditorName\"\r\n                        label=\"Auditor name\"\r\n                        fullWidth\r\n                        autoComplete=\"given-name\"\r\n                        defaultValue={audit.auditorName}\r\n                        onChange={handleControlledInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                    <InputLabel htmlFor=\"auditDate\">Audit Date*</InputLabel>\r\n                    <TextField\r\n                        required\r\n                        id=\"auditDate\"\r\n                        name=\"auditDate\"\r\n                        type=\"date\"\r\n                        fullWidth\r\n                        autoComplete=\"Audit Date\"\r\n                        defaultValue={audit.auditDate}\r\n                        onChange={handleControlledInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                    <InputLabel htmlFor=\"score\">Score*</InputLabel>\r\n                    <TextField\r\n                        id=\"score\"\r\n                        name=\"score\"\r\n                        // label=\"Score\"\r\n                        fullWidth\r\n                        autoComplete=\"Audit Score\"\r\n                        defaultValue={audit.score}\r\n                        type=\"number\"\r\n                        onChange={handleControlledInputChange}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6} sm={6}>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">\r\n                            Result Status\r\n                        </FormLabel>\r\n                        <RadioGroup\r\n                            aria-label=\"passed\"\r\n                            name=\"passed\"\r\n                            defaultValue={audit.passed}\r\n                            onChange={handleControlledInputChange}\r\n                        >\r\n                            <FormControlLabel\r\n                                value='pass'\r\n                                control={<Radio />}\r\n                                label=\"Pass\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value='fail'\r\n                                control={<Radio />}\r\n                                label=\"Fail\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </FormControl>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import React, { useRef } from 'react';\r\nimport './Audit.css';\r\nimport {\r\n    Grid,\r\n    Radio,\r\n    Button,\r\n    Select,\r\n    FormLabel,\r\n    TextField,\r\n    RadioGroup,\r\n    FormControl,\r\n    FormControlLabel,\r\n} from '@material-ui/core';\r\n\r\n\r\nexport default ({ violationCategories, blankViolation, violations, setViolations }) => {\r\n\r\n    const description = useRef()\r\n\r\n    const addViolation = () => {\r\n        setViolations([...violations, { ...blankViolation }]);\r\n    };\r\n\r\n    const handleViolationChange = (e) => {\r\n        const updatedViolations = [...violations];\r\n        if (e.target.name === 'violationCategoryId') {\r\n            updatedViolations[e.target.id][e.target.name] = parseInt(e.target.value);\r\n        } else {\r\n            updatedViolations[e.target.id][e.target.name] = e.target.value;\r\n        }\r\n        setViolations(updatedViolations);\r\n    };\r\n\r\n    return (\r\n        <form className=\"violationsForm\">\r\n            <h2>Violations</h2>\r\n            <Button variant=\"outlined\" onClick={addViolation}>Add new issue</Button>\r\n            <br />\r\n            {\r\n                violations.map((val, idx) => {\r\n                    const isCriticalId = `isCritical-${idx}`;\r\n\r\n                    return (\r\n\r\n                        <Grid key={idx} container spacing={3}>\r\n                            <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                                <FormControl fullWidth>\r\n                                    <TextField\r\n                                        rows={2}\r\n                                        required\r\n                                        fullWidth\r\n                                        multiline\r\n                                        ref={description}\r\n                                        variant=\"outlined\"\r\n                                        label=\"description\"\r\n                                        autoComplete=\"description\"\r\n                                        onChange={handleViolationChange}\r\n                                        value={violations[idx].description}\r\n                                        inputProps={{\r\n                                            name: \"description\",\r\n                                            id: idx\r\n                                        }}\r\n                                    />\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <FormControl>\r\n                                    <FormLabel component=\"legend\">\r\n                                        Select Category\r\n                                    </FormLabel>\r\n                                    <Select\r\n                                        native\r\n                                        variant=\"outlined\"\r\n                                        className=\"violationCategoryId\"\r\n                                        value={val.violationCategoryId}\r\n                                        onChange={handleViolationChange}\r\n                                        inputProps={{\r\n                                            name: \"violationCategoryId\",\r\n                                            id: idx,\r\n                                        }}\r\n                                    >\r\n                                        <option aria-label=\"None\" value=\"\" />\r\n                                        {\r\n                                            violationCategories.map(v => (\r\n                                                <option key={v.id} value={v.id}>\r\n                                                    {v.name}\r\n                                                </option>\r\n                                            ))\r\n                                        }\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item xs={6} sm={6}>\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">\r\n                                        Critical Violation?\r\n                                    </FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-label=\"passed\"\r\n                                        className=\"isCritical\"\r\n                                        name={isCriticalId}\r\n                                        value={val.isCritical}\r\n                                        onChange={handleViolationChange}\r\n                                    >\r\n                                        <FormControlLabel\r\n                                            value='no'\r\n                                            label=\"No\"\r\n                                            control={<Radio inputProps={{ name: \"isCritical\", id: idx }} />}\r\n                                        />\r\n                                        <FormControlLabel\r\n                                            value='yes'\r\n                                            label=\"Yes\"\r\n                                            control={<Radio inputProps={{ name: \"isCritical\", id: idx }} />}\r\n                                        />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n                        </Grid>\r\n                    )\r\n                })\r\n            }\r\n        </form >\r\n    )\r\n}\r\n","import React, { useState, createContext, useContext } from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { UserContext } from './UserProvider';\r\n\r\nexport const AuditContext = createContext();\r\n\r\nexport default (props) => {\r\n    const apiUrl = \"/api/audit\"\r\n    const [audit, setAudit] = useState({})\r\n    const [audits, setAudits] = useState([])\r\n    const { getToken } = useContext(UserContext)\r\n\r\n    const getAuditsByUserId = async (userId) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/getByUser/${userId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n                .then(setAudits)\r\n        )\r\n    };\r\n\r\n    const getAuditById = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n                .then(setAudit)\r\n        )\r\n    };\r\n\r\n    const saveAudit = async (audit) => {\r\n        return await getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(audit)\r\n            }).then(r => r.json()))\r\n    };\r\n\r\n    const updateAudit = async (audit) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${audit.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(audit),\r\n            }).then(() => getAuditsByUserId(audit.userId))\r\n        )\r\n    }\r\n\r\n    const deleteAudit = async (auditId, userId) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${auditId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => getAuditsByUserId(userId))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <AuditContext.Provider\r\n            value={{\r\n                audit,\r\n                audits,\r\n                getAuditsByUserId,\r\n                getAuditById,\r\n                saveAudit,\r\n                updateAudit,\r\n                deleteAudit\r\n            }}\r\n        >\r\n            {props.children}\r\n        </AuditContext.Provider>\r\n    );\r\n\r\n}","import React, { useState, useContext, useEffect } from 'react';\r\nimport Review from './Review';\r\nimport SideNav from '../SideNav';\r\nimport AuditForm from './AuditForm';\r\nimport Step from '@material-ui/core/Step';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Container } from '@material-ui/core';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AuditViolationsForm from './AuditViolationsForm';\r\nimport { AuditContext } from '../../providers/AuditProvider';\r\nimport { AuditViolationContext } from '../../providers/AuditViolationProvider';\r\nimport { ViolationCategoryContext } from '../../providers/ViolationCategoryProvider';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    layout: {\r\n        width: 'auto',\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n            width: 600,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto',\r\n        },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        display: 'flex',\r\n        justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default () => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const { saveAudit } = useContext(AuditContext)\r\n    const [activeStep, setActiveStep] = useState(0)\r\n    const { saveViolation } = useContext(AuditViolationContext)\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    const { getAllViolationCategories, violationCategories } = useContext(ViolationCategoryContext)\r\n    const blankViolation = { auditId: '', isCritical: '', violationCategoryId: '', description: '' }\r\n    const [violations, setViolations] = useState([\r\n        { ...blankViolation }\r\n    ]);\r\n\r\n    const steps = ['Audit Info', 'Violations', 'Review Audit Record'];\r\n\r\n    const [audit, setAudit] = useState({\r\n        auditorName: '',\r\n        auditDate: '',\r\n        score: '',\r\n        passed: '',\r\n        userId: currentUser.id\r\n    })\r\n\r\n    useEffect(() => {\r\n        getAllViolationCategories()\r\n    }, [])\r\n\r\n    const getStepContent = (step) => {\r\n        switch (step) {\r\n            case 0:\r\n                return <AuditForm\r\n                    audit={audit}\r\n                    setAudit={setAudit}\r\n                />\r\n            case 1:\r\n                return <AuditViolationsForm\r\n                    violationCategories={violationCategories}\r\n                    blankViolation={blankViolation}\r\n                    setViolations={setViolations}\r\n                    violations={violations}\r\n                    audit={audit}\r\n                />\r\n            case 2:\r\n                return <Review\r\n                    violationCategories={violationCategories}\r\n                    blankViolation={blankViolation}\r\n                    violations={violations}\r\n                    audit={audit}\r\n                />\r\n            default:\r\n                throw new Error('Unknown step')\r\n        }\r\n    }\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1)\r\n    }\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1)\r\n    }\r\n\r\n    const createNewRecord = (auditObj, violationArray) => {\r\n        if (auditObj.passed === 'pass') {\r\n            auditObj.passed = true\r\n        } else {\r\n            auditObj.passed = false\r\n        }\r\n        saveAudit(auditObj)\r\n            .then(r => {\r\n                violationArray.map(v => {\r\n                    if (v.isCritical === 'no') {\r\n                        v.isCritical = false\r\n                    } else {\r\n                        v.isCritical = true\r\n                    }\r\n                    v.auditId = r.id\r\n                    saveViolation(v)\r\n                })\r\n            })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <SideNav />\r\n                <main className={classes.layout}>\r\n                    <Container maxWidth=\"lg\" className={classes.container}>\r\n                        <Paper className={classes.paper}>\r\n                            <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                                New Audit Record\r\n                    </Typography>\r\n                            <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                                {steps.map((label) => (\r\n                                    <Step key={label}>\r\n                                        <StepLabel>{label}</StepLabel>\r\n                                    </Step>\r\n                                ))}\r\n                            </Stepper>\r\n                            <>\r\n                                {activeStep === steps.length ? (\r\n                                    <>\r\n                                        <Typography variant=\"h5\" gutterBottom>\r\n                                            Submission Successful.\r\n                                </Typography>\r\n                                        <Typography variant=\"subtitle1\">\r\n                                            Return to view new audit record.\r\n                                </Typography>\r\n                                        <Button onClick={() => history.push(\"/audits\")}>Return</Button>\r\n                                    </>\r\n                                ) : (\r\n                                        <>\r\n                                            {getStepContent(activeStep)}\r\n                                            <div className={classes.buttons}>\r\n                                                {activeStep !== 0 && (\r\n                                                    <Button onClick={handleBack} className={classes.button}>\r\n                                                        Back\r\n                                                    </Button>\r\n                                                )}\r\n                                                <Button\r\n                                                    variant=\"contained\"\r\n                                                    color=\"primary\"\r\n                                                    onClick={() => {\r\n                                                        if (activeStep === steps.length - 1) {\r\n                                                            createNewRecord(audit, violations)\r\n                                                            handleNext()\r\n                                                        } else {\r\n                                                            handleNext()\r\n                                                        }\r\n                                                    }}\r\n                                                    className={classes.button}\r\n                                                >\r\n                                                    {activeStep === steps.length - 1 ? 'Submit Record' : 'Next'}\r\n                                                </Button>\r\n                                            </div>\r\n                                        </>\r\n                                    )}\r\n                            </>\r\n                        </Paper>\r\n                    </Container>\r\n                </main>\r\n            </div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { Pie, Doughnut } from \"react-chartjs-2\";\r\nimport { Grid } from '@material-ui/core';\r\nimport './Audit.css';\r\n\r\nexport default ({ violations, violationCategories }) => {\r\n    const doughnutChartPercentages = []\r\n    const doughnutChartCategoryNames = []\r\n    const criticals = violations.filter(v => v.isCritical === true)\r\n    const nonCriticals = violations.filter(v => v.isCritical === false)\r\n    const criticalsPercentage = Math.round((criticals.length / violations.length) * 100)\r\n    const nonCriticalsPercentage = Math.round((nonCriticals.length / violations.length) * 100)\r\n\r\n\r\n    violationCategories.map(vc => {\r\n        const check = violations.filter(v => v.violationCategoryId === vc.id)\r\n        if (check.length === 0) {\r\n            return null\r\n        } else {\r\n            const percentage = Math.round((check.length / violations.length) * 100)\r\n            doughnutChartPercentages.push(percentage)\r\n            doughnutChartCategoryNames.push(vc.name)\r\n        }\r\n    })\r\n\r\n    const pieData = {\r\n        labels: ['Critical', 'Non-critical'],\r\n        datasets: [\r\n            {\r\n                label: 'Critical Issues',\r\n                backgroundColor: [\r\n                    '#B21F00',\r\n                    '#08c515',\r\n                    '#2FDE00',\r\n                    '#00A6B4',\r\n                    '#6800B4'\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    '#501800',\r\n                    '#4B5000',\r\n                    '#175000',\r\n                    '#003350',\r\n                    '#35014F'\r\n                ],\r\n                data: [criticalsPercentage, nonCriticalsPercentage]\r\n            }\r\n        ]\r\n    }\r\n\r\n    const doughnutData = {\r\n        labels: doughnutChartCategoryNames,\r\n        datasets: [\r\n            {\r\n                label: 'Critical Issues',\r\n                backgroundColor: [\r\n                    '#00A6B4',\r\n                    '#6800B4',\r\n                    '#B21F00',\r\n                    '#08c515',\r\n                    '#2FDE00',\r\n                    '#4c3bc7',\r\n                    '#02421b',\r\n                    '#ae61e7',\r\n                    '#f6f6ae',\r\n                    '#ddd47d',\r\n                    '#659e6c',\r\n                    '#fc437e',\r\n                    '#d8975f',\r\n                    '#d91141',\r\n                    '#b2ea77',\r\n                    '#4e1c0d',\r\n                    '#d79a33',\r\n                    '#c5da3b'\r\n                ],\r\n                hoverBackgroundColor: [\r\n                    '#501800',\r\n                    '#4B5000',\r\n                    '#175000',\r\n                    '#003350',\r\n                    '#35014F'\r\n                ],\r\n                data: doughnutChartPercentages\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                <Pie\r\n                    data={pieData}\r\n                    options={{\r\n                        title: {\r\n                            display: true,\r\n                            text: '% of Critical Violations',\r\n                            fontSize: 16\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: 'right'\r\n                        }\r\n                    }}\r\n                />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                <Doughnut\r\n                    data={doughnutData}\r\n                    options={{\r\n                        title: {\r\n                            display: true,\r\n                            text: '% of Violations by category',\r\n                            fontSize: 16\r\n                        },\r\n                        legend: {\r\n                            display: true,\r\n                            position: 'right'\r\n                        }\r\n                    }}\r\n                />\r\n            </Grid>\r\n        </>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport AuditDetailsCharts from './AuditDetailsCharts';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { AuditContext } from '../../providers/AuditProvider';\r\nimport { AuditViolationContext } from '../../providers/AuditViolationProvider';\r\nimport { ViolationCategoryContext } from '../../providers/ViolationCategoryProvider';\r\nimport { Grid, Paper, Typography, Button, makeStyles, Container, Divider, CircularProgress } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    gridContainer: {\r\n        display: 'flex',\r\n        flexDirection: 'row'\r\n    },\r\n    content: {\r\n        backgroundColor: \"whitesmoke\",\r\n        flexGrow: 1,\r\n        paddingTop: 10,\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n    },\r\n    backButton: {\r\n        marginBottom: \"5%\",\r\n        marginLeft: \"1%\",\r\n        maxWidth: \"5%\"\r\n    },\r\n    progress: {\r\n        alignSelf: 'center'\r\n    }\r\n}));\r\n\r\nexport default () => {\r\n    let i = 0;\r\n    const { id } = useParams()\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const parsedId = parseInt(id)\r\n    const [loading, setLoading] = useState(true)\r\n    const { getAuditById, audit } = useContext(AuditContext)\r\n    const { auditViolations, getViolationsByAuditId } = useContext(AuditViolationContext)\r\n    const { getAllViolationCategories, violationCategories } = useContext(ViolationCategoryContext)\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            await Promise.all([\r\n                getAuditById(parsedId),\r\n                getViolationsByAuditId(parsedId),\r\n                getAllViolationCategories()\r\n            ]);\r\n            setLoading(false);\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <main className={classes.content}>\r\n                <Button\r\n                    onClick={() => history.push(\"/audits\")}\r\n                    className={classes.backButton}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    <ArrowBackIcon />\r\n                </Button>\r\n                {loading ?\r\n                    <CircularProgress className={classes.progress} />\r\n                    :\r\n                    <Container maxWidth=\"lg\">\r\n                        <Grid container spacing={3} className={classes.gridContainer}>\r\n                            <Grid item xs={12} md={12} lg={12}>\r\n                                <Paper className={classes.paper} elevation={3}>\r\n                                    <Typography variant=\"h4\" align=\"center\">Audit Details</Typography>\r\n                                    <>\r\n                                        <Typography className=\"taskListTyopgraphy\">\r\n                                            Date: {new Date(audit.auditDate).toLocaleDateString()}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            Score: {audit.score}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            Passed? {audit.passed ? \"Yes\" : \"No\"}\r\n                                        </Typography>\r\n                                        <Typography>\r\n                                            Auditor Name: {audit.auditorName}\r\n                                        </Typography>\r\n                                        <Divider />\r\n                                        <h2>Violations</h2>\r\n                                        <Grid container spacing={3}>\r\n                                            {\r\n                                                auditViolations.map(a => (\r\n                                                    <Grid item xs={12} sm={12} md={6} lg={6} key={a.id}>\r\n                                                        <Typography>\r\n                                                            <strong>Violation # {i += 1}</strong>\r\n                                                        </Typography>\r\n                                                        <Typography>\r\n                                                            Category: {a.violationCategory.name}\r\n                                                        </Typography>\r\n                                                        <Typography>\r\n                                                            Issue: {a.description}\r\n                                                        </Typography>\r\n                                                        <Typography>\r\n                                                            Critical issue ? : {a.isCritical ? \"Yes\" : \"No\"}\r\n                                                        </Typography><br />\r\n                                                    </Grid>\r\n                                                ))\r\n                                            }\r\n                                        </Grid>\r\n                                    </>\r\n                                    <Divider />\r\n                                    <h2>Charts</h2>\r\n                                    <Grid container spacing={3}>\r\n                                        <AuditDetailsCharts\r\n                                            violations={auditViolations}\r\n                                            violationCategories={violationCategories}\r\n                                        />\r\n                                    </Grid>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                }\r\n            </main>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { ListItemText, ListItem, Divider, ListItemAvatar, Avatar } from '@material-ui/core';\r\nimport FaceOutlinedIcon from '@material-ui/icons/FaceOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { yellow } from '@material-ui/core/colors';\r\nimport './Employee.css';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    gold: {\r\n        color: theme.palette.getContrastText(yellow[500]),\r\n        backgroundColor: yellow[500],\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default ({ employee, getCredentialsByEmployeeId }) => {\r\n    const today = new Date();\r\n    const classes = useStyles()\r\n    const [credentials, setCredentials] = useState([])\r\n    const expiredList = credentials.filter(c => new Date(c.expirationDate) < today)\r\n\r\n    useEffect(() => {\r\n        getCredentialsByEmployeeId(employee.id)\r\n            .then(setCredentials)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {credentials &&\r\n                <>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar className={classes.gold}>\r\n                                <FaceOutlinedIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                            primary={employee.fullName}\r\n                            secondary={`${credentials.length} credential(s), ${expiredList.length} expired`}\r\n                        />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useEffect, useContext } from 'react';\r\nimport { CredentialContext } from '../../providers/CredentialProvider';\r\nimport { EmployeeContext } from '../../providers/EmployeeProvider';\r\nimport DashboardEmployee from '../employee/DashboardEmployee';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst drawerWidth = 270;\r\n//test comment\r\n\r\nexport default () => {\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    const { getEmployeesByUserId, employees } = useContext(EmployeeContext)\r\n    const { getCredentialsByEmployeeId, credentials } = useContext(CredentialContext)\r\n\r\n    useEffect(() => {\r\n        getEmployeesByUserId(currentUser.id);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div >\r\n                <CssBaseline />\r\n                <main >\r\n                    {(employees[0]) ?\r\n                        employees.map(e => (\r\n                            <DashboardEmployee\r\n                                key={e.id}\r\n                                employee={e}\r\n                                credentials={credentials}\r\n                                getCredentialsByEmployeeId={getCredentialsByEmployeeId}\r\n                            />\r\n                        ))\r\n                        :\r\n                        <>\r\n                            <br />\r\n                            <Typography variant=\"h5\">No employees</Typography>\r\n                        </>\r\n                    }\r\n                </main>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport './FoodSafetyResources.css';\r\nimport { Typography, List, ListItem, Divider } from '@material-ui/core';\r\n\r\nexport default () => {\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\">\r\n                Food Safety Resources\r\n            </Typography>\r\n            <List>\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.fda.gov/media/137867/download\"\r\n                    >\r\n                        COVID-19 Re-opening Food Safety Checklist\r\n                    </a>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.fda.gov/food/fda-food-code/state-retail-and-food-service-codes-and-regulations-state\"\r\n                    >\r\n                        Food Safety Regulations by state\r\n                    </a>\r\n                </ListItem>\r\n                <Divider />\r\n\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.fsis.usda.gov/wps/portal/fsis/topics/food-safety-education/get-answers/food-safety-fact-sheets\"\r\n                    >\r\n                        Food Safety Fact Sheets\r\n                    </a>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.fsis.usda.gov/wps/portal/fsis/topics/food-safety-education/get-answers/food-safety-fact-sheets/!ut/p/a1/jY_RCoJAFES_pQ9Y7jVN8lGEUEtFpNr2JZbaVaFccZeivj6jpyLLO08XzswwwIACa_ilLrmpVcNPz5-5e8zRtbwA48yzFhilmzxbBgHOi1kP7H4AqT3SP3A-_vPHIwqmXRIkJbCWm4rUjVRAS2EIb_RVdBqoVOpINJfC3IjkB0N0JYTRsAX2no5Wryi1CyeMUxsz5xP4Mv8FDO9rz2t6X4VYR_7kAeoGtjg!/?1dmy&urile=wcm%3apath%3a%2FFSIS-Content%2Finternet%2Fmain%2Ftopics%2Ffood-safety-education\"\r\n                    >\r\n                        Food Safety Education\r\n                    </a>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.fsis.usda.gov/wps/portal/fsis/topics/recalls-and-public-health-alerts/current-recalls-and-alerts\"\r\n                    >\r\n                        USDA Recalls\r\n                    </a>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.fda.gov/safety/recalls-market-withdrawals-safety-alerts\"\r\n                    >\r\n                        FDA Recalls\r\n                    </a>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.fda.gov/food/guidance-regulation-food-and-dietary-supplements/hazard-analysis-critical-control-point-haccp\"\r\n                    >\r\n                        HACCP Information\r\n                    </a>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.business.com/articles/guide-to-food-handler-safety-certifications/\"\r\n                    >\r\n                        Restaurant Food Handler Certification Guide\r\n                    </a>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.fda.gov/food/food-safety-during-emergencies/food-safety-and-coronavirus-disease-2019-covid-19\"\r\n                    >\r\n                        Information on food safety and COVID-19\r\n                    </a>\r\n                </ListItem>\r\n                <Divider />\r\n                <ListItem>\r\n                    <a\r\n                        className=\"dashboardLinks\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                        href=\"https://www.fda.gov/food/fda-food-code/state-retail-and-food-service-codes-and-regulations-state\"\r\n                    >\r\n                        Information on food regulations by state\r\n                    </a>\r\n                </ListItem>\r\n            </List>\r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport { makeStyles, Typography, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    chartJsHeight: {\r\n        height: 100\r\n    }\r\n}))\r\n\r\nexport default ({ audits, barChartView, toggleChartView }) => {\r\n\r\n    const classes = useStyles()\r\n    const chartLabels = []\r\n    const chartData = []\r\n    const auditScores = audits.map(a => chartData.push(a.score))\r\n\r\n    const test = (obj) => {\r\n        let month;\r\n        let auditDateLocaleString = new Date(obj.auditDate).toLocaleDateString()\r\n        let monthNum = new Date(auditDateLocaleString).getMonth() + 1\r\n        let year = new Date(auditDateLocaleString).getFullYear()\r\n\r\n        switch (monthNum) {\r\n            case 1:\r\n                month = `Jan ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 2:\r\n                month = `Feb ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 3:\r\n                month = `Mar ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 4:\r\n                month = `Apr ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 5:\r\n                month = `May ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 6:\r\n                month = `Jun ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 7:\r\n                month = `Jul ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 8:\r\n                month = `Aug ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 9:\r\n                month = `Sept ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 10:\r\n                month = `Oct ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 11:\r\n                month = `Nov ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n            case 12:\r\n                month = `Dec ${year}`;\r\n                chartLabels.push(month)\r\n                break;\r\n        }\r\n    }\r\n\r\n    const auditDates = audits.map(a => {\r\n        return test(a)\r\n    })\r\n\r\n\r\n    const data = {\r\n        labels: chartLabels,\r\n        datasets: [\r\n            {\r\n                label: \"Audit Scores\",\r\n                data: chartData,\r\n                fill: true,\r\n                backgroundColor: \"RGBA(0,188,228,0.5)\",\r\n                borderColor: \"rgba(37, 95, 90, 1)\"\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"chartHeader\">\r\n                <Typography variant=\"h6\" align=\"left\">\r\n                    Audit Records\r\n                </Typography>\r\n                <Button\r\n                    onClick={toggleChartView}\r\n                    className=\"auditChartButton\"\r\n                    variant=\"outlined\"\r\n                >\r\n                    Toggle Chart\r\n                </Button>\r\n            </div>\r\n            {!barChartView &&\r\n\r\n                <div className=\"App\">\r\n                    <Line data={data} options={{\r\n                        scales: {\r\n                            yAxes: [{\r\n                                display: true,\r\n                                ticks: {\r\n                                    stepSize: 5,\r\n                                    maxTicksLimit: 10,    // minimum will be 0, unless there is a lower value.\r\n                                    // OR //\r\n                                    beginAtZero: true   // minimum value will be 0.\r\n                                }\r\n                            }]\r\n                        }\r\n                    }} />\r\n                </div>\r\n            }\r\n            {barChartView &&\r\n\r\n                <div className={classes.chartJsHeight}>\r\n                    <Bar\r\n                        data={data}\r\n                        options={{\r\n                            responsive: true,\r\n                            scales: {\r\n                                yAxes: [{\r\n                                    display: true,\r\n                                    ticks: {\r\n                                        stepSize: 5,\r\n                                        maxTicksLimit: 8,    // minimum will be 0, unless there is a lower value.\r\n                                        // OR //\r\n                                        beginAtZero: true   // minimum value will be 0.\r\n                                    }\r\n                                }]\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n            }\r\n            {/* // :\r\n                // <>\r\n                //     <br />\r\n                //     <Typography variant=\"h5\">No audits to view</Typography>\r\n                // </> */}\r\n        </>\r\n    );\r\n}","import React, { useState, createContext, useContext } from 'react';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { UserContext } from './UserProvider';\r\n\r\nexport const TaskContext = createContext();\r\n\r\nexport default (props) => {\r\n    const apiUrl = \"/api/task\"\r\n    const [tasks, setTasks] = useState([])\r\n    const [completedTasks, setCompletedTasks] = useState([])\r\n    const { getToken } = useContext(UserContext)\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n\r\n    const getTasksByUserId = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/getByUser/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n                .then(setTasks)\r\n        )\r\n    };\r\n    const getCompletedTasksByUserId = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/completedTasksByUser/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n                .then(setCompletedTasks)\r\n        )\r\n    };\r\n    const getIncompleteTasksByUserId = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/incompleteTasksByUser/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n                .then(setTasks)\r\n        )\r\n    };\r\n\r\n    const getTaskById = async (id) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${id}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n        )\r\n    };\r\n\r\n    const saveTask = async (task) => {\r\n        await getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(task)\r\n            }).then(() => getIncompleteTasksByUserId(currentUser.id))\r\n        );\r\n    };\r\n\r\n    const updateTask = async (task) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${task.id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(task),\r\n            }).then(() => getIncompleteTasksByUserId(currentUser.id))\r\n        )\r\n    }\r\n\r\n    const deleteTask = async (taskId) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${taskId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => getIncompleteTasksByUserId(currentUser.id))\r\n        )\r\n    }\r\n\r\n    const deleteCompletedTask = async (taskId) => {\r\n        await getToken().then((token) =>\r\n            fetch(`${apiUrl}/${taskId}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then(() => getCompletedTasksByUserId(currentUser.id))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <TaskContext.Provider\r\n            value={{\r\n                tasks,\r\n                completedTasks,\r\n                getTasksByUserId,\r\n                getCompletedTasksByUserId,\r\n                getIncompleteTasksByUserId,\r\n                getTaskById,\r\n                saveTask,\r\n                updateTask,\r\n                deleteTask,\r\n                deleteCompletedTask\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n    );\r\n\r\n}","import React from 'react';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\n\r\n\r\nexport default ({ tasks }) => {\r\n    const completedTasks = tasks.filter(t => t.isCompleted === true)\r\n    const taskRatio = (completedTasks.length / tasks.length) * 100\r\n\r\n    return (\r\n        <>\r\n            {taskRatio &&\r\n                <CircularProgressbar\r\n                    value={Math.round(taskRatio)}\r\n                    text={`${Math.round(taskRatio)}%`}\r\n                    styles={{\r\n                        // Customize the root svg element\r\n                        root: {},\r\n                        // Customize the path, i.e. the \"completed progress\"\r\n                        path: {\r\n                            // Path color\r\n                            stroke: `red`,\r\n                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                            strokeLinecap: 'round',\r\n                        },\r\n                        // Customize the circle behind the path, i.e. the \"total progress\"\r\n                        trail: {\r\n                            // Trail color\r\n                            stroke: 'rgba(255,99,71, 0.2)',\r\n                            // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n                            strokeLinecap: 'round',\r\n                            // Rotate the trail\r\n                            transform: 'rotate(0.25turn)',\r\n                            transformOrigin: 'center center',\r\n                        },\r\n                        // Customize the text\r\n                        text: {\r\n                            // Text color\r\n                            fill: 'dimgray',\r\n                            // Text size\r\n                            fontSize: '16px',\r\n                        },\r\n                        // Customize background - only used when the `background` prop is true\r\n                        background: {\r\n                            fill: '#3e98c7',\r\n                        },\r\n                    }}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport CredentialDashboardView from '../credential/CredentialDashboardView';\r\nimport DashboardResources from '../foodSafetyResources/DashboardResources';\r\nimport { EmployeeContext } from '../../providers/EmployeeProvider';\r\nimport AuditDashboardChart from '../audit/AuditDashboardChart';\r\nimport { AuditContext } from '../../providers/AuditProvider';\r\nimport { Container, Paper, Grid, CircularProgress } from '@material-ui/core';\r\nimport { TaskContext } from '../../providers/TaskProvider';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TaskProgress from '../task/TaskProgress';\r\nimport SideNav from '../SideNav';\r\nimport \"./Dashboard.css\";\r\nimport clsx from 'clsx';\r\n\r\n\r\n\r\nconst drawerWidth = 270;\r\n//test comment\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        backgroundColor: \"#EBECF0\",\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 310,\r\n    },\r\n    chartHeight: {\r\n        height: 430,\r\n    },\r\n    resourcesHeight: {\r\n        height: 190,\r\n    }\r\n}));\r\n\r\n\r\nexport default ({ barChartView, toggleChartView }) => {\r\n    const classes = useStyles()\r\n    const [loading, setLoading] = useState(true)\r\n    const { getTasksByUserId, tasks } = useContext(TaskContext)\r\n    const { getEmployeesByUserId } = useContext(EmployeeContext)\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    const { audits, getAuditsByUserId } = useContext(AuditContext)\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\r\n    const chartHeightPaper = clsx(classes.paper, classes.chartHeight)\r\n    const resourcesHeightPaper = clsx(classes.paper, classes.resourcesHeight)\r\n\r\n\r\n    useEffect(() => {\r\n        // async function fetchData() {\r\n        //     await getTasksByUserId(currentUser.id);\r\n        //     await getEmployeesByUserId(currentUser.id);\r\n        //     await getAuditsByUserId(currentUser.id);\r\n        //     setLoading(false);\r\n        // }\r\n\r\n        async function fetchData() {\r\n            let response = await Promise.all([\r\n                getTasksByUserId(currentUser.id),\r\n                getEmployeesByUserId(currentUser.id),\r\n                getAuditsByUserId(currentUser.id)\r\n            ])\r\n            setLoading(false)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {loading ?\r\n                <CircularProgress />\r\n                :\r\n                <>\r\n                    <CssBaseline />\r\n                    <SideNav />\r\n                    <main className={classes.content}>\r\n                        <Container maxWidth=\"lg\" className={classes.container}>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} md={8} lg={8}>\r\n                                    <Paper className={chartHeightPaper} elevation={3}>\r\n                                        {audits[0] ?\r\n                                            <AuditDashboardChart\r\n                                                audits={audits}\r\n                                                barChartView={barChartView}\r\n                                                toggleChartView={toggleChartView}\r\n                                            />\r\n                                            :\r\n                                            <Typography variant=\"h5\">No audits to view</Typography>\r\n                                        }\r\n                                    </Paper>\r\n                                    <br />\r\n                                    <Paper className={resourcesHeightPaper} elevation={3}>\r\n                                        <DashboardResources />\r\n                                    </Paper>\r\n                                </Grid>\r\n                                <Grid item xs={12} md={4} lg={4}>\r\n                                    <Paper className={fixedHeightPaper} elevation={3}>\r\n                                        <Typography variant=\"h6\">\r\n                                            Tasks Completed\r\n                                    </Typography>\r\n                                        {\r\n                                            (tasks.length !== 0) ?\r\n                                                <TaskProgress tasks={tasks} />\r\n                                                :\r\n                                                <>\r\n                                                    <br />\r\n                                                    <Typography variant=\"h5\">\r\n                                                        No current tasks\r\n                                                </Typography>\r\n                                                </>\r\n                                        }\r\n                                    </Paper>\r\n                                    <br />\r\n                                    <Paper className={fixedHeightPaper} elevation={3}>\r\n                                        <Typography variant=\"h6\">\r\n                                            Employee Credentials\r\n                                    </Typography>\r\n                                        <CredentialDashboardView />\r\n                                    </Paper>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Container>\r\n                    </main>\r\n                </>\r\n            }\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Button, TableCell, TableRow } from '@material-ui/core';\r\n\r\n\r\nexport default ({ audit, history }) => {\r\n\r\n    const date = new Date(audit.auditDate).toLocaleDateString()\r\n\r\n    return (\r\n        <>\r\n            {audit &&\r\n                <TableRow>\r\n                    <TableCell>\r\n                        {date}\r\n                    </TableCell>\r\n                    <TableCell>{audit.auditorName}</TableCell>\r\n                    <TableCell>{audit.score}</TableCell>\r\n                    <TableCell>{audit.passed ? \"Yes\" : \"No\"}</TableCell>\r\n                    <TableCell>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            onClick={() => {\r\n                                history.push(`/audit/${audit.id}`)\r\n                            }}\r\n                        >\r\n                            Details\r\n                        </Button>\r\n                    </TableCell>\r\n                </TableRow>\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useEffect, useContext } from 'react';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport { AuditContext } from '../../providers/AuditProvider';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Table from '@material-ui/core/Table';\r\nimport { Button } from '@material-ui/core';\r\nimport SideNav from '../SideNav';\r\nimport Audit from './Audit';\r\nimport './Audit.css';\r\n\r\nconst drawerWidth = 270;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        backgroundColor: \"#EBECF0\",\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n        paddingTop: 10,\r\n    },\r\n    tableContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    table: {\r\n        maxWidth: 1175\r\n    },\r\n    newRecordButton: {\r\n        marginLeft: \"2%\"\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default () => {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    const { audits, getAuditsByUserId } = useContext(AuditContext)\r\n\r\n    useEffect(() => {\r\n        getAuditsByUserId(currentUser.id);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <SideNav />\r\n                <main className={classes.content}>\r\n                    <Typography variant=\"h4\" align=\"center\">Audit Records</Typography><br />\r\n                    <Button\r\n                        className={classes.newRecordButton}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() => history.push(\"/createAudit\")}\r\n                    >\r\n                        Create new record\r\n                    </Button>\r\n                    <TableContainer className={classes.tableContainer}>\r\n                        <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell><strong>Audit Date</strong></TableCell>\r\n                                    <TableCell><strong>Auditor</strong></TableCell>\r\n                                    <TableCell><strong>Score</strong></TableCell>\r\n                                    <TableCell><strong>Passed?</strong></TableCell>\r\n                                    <TableCell></TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {audits.map((a) => (\r\n                                    <Audit key={a.id} audit={a} history={history} />\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </main>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, makeStyles, Grid, TextField, Button } from '@material-ui/core';\r\nimport { EmployeeContext } from '../../providers/EmployeeProvider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default ({ toggleTaskModal, currentUser, saveTask }) => {\r\n    const { getEmployeesByUserId, employees } = useContext(EmployeeContext)\r\n    const [selectedDate, setSelectedDate] = useState(new Date())\r\n    const [employeeId, setEmployeeId] = useState(0)\r\n    const [taskText, setTaskText] = useState()\r\n    const classes = useStyles()\r\n\r\n    const handleDateChange = (date) => {\r\n        const dateMod = new Date(date)\r\n        const milliseconds = dateMod.getTime()\r\n        const timeOffset = dateMod.getTimezoneOffset() * 60000\r\n        const dateMinusOffset = (milliseconds - timeOffset)\r\n        const formattedDate = new Date(dateMinusOffset).toJSON()\r\n        setSelectedDate(formattedDate)\r\n    }\r\n\r\n    const handleNameChange = (event) => {\r\n        setEmployeeId(event.target.value)\r\n    }\r\n\r\n    const createNewTask = () => {\r\n        saveTask({\r\n            text: taskText,\r\n            userId: currentUser.id,\r\n            expirationDate: selectedDate,\r\n            employeeId: employeeId\r\n        });\r\n        toggleTaskModal()\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        getEmployeesByUserId(currentUser.id)\r\n    }, [])\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <form className={classes.form} onSubmit={e => {\r\n                e.preventDefault()\r\n                createNewTask()\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={e => setTaskText(e.target.value)}\r\n                            autoComplete=\"fname\"\r\n                            name=\"text\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"taskText\"\r\n                            multiline\r\n                            rows={5}\r\n                            label=\"Type Task Here\"\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    id=\"expirationDate\"\r\n                                    label=\"Set Expiration Date\"\r\n                                    value={selectedDate}\r\n                                    onChange={handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel htmlFor=\"employee\">\r\n                                    Assign To\r\n                                </InputLabel>\r\n                                <Select\r\n                                    native=\"true\"\r\n                                    variant=\"outlined\"\r\n                                    value={employeeId}\r\n                                    onChange={handleNameChange}\r\n                                    inputProps={{\r\n                                        name: 'employee',\r\n                                        id: 'employee',\r\n                                    }}\r\n                                >\r\n                                    <option aria-label=\"None\" value=\"\" />\r\n                                    {\r\n                                        employees.map(e => (\r\n                                            <option key={e.id} value={e.id}>\r\n                                                {e.firstName} {e.lastName}\r\n                                            </option>\r\n                                        ))\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport TaskCreateForm from './TaskCreateForm';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        // border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default ({ toggleTaskModal, taskModal, currentUser, saveTask }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={taskModal}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <IconButton onClick={toggleTaskModal}>\r\n                        <CloseOutlinedIcon />\r\n                    </IconButton>\r\n                    <h2 id=\"transition-modal-title\">New Task</h2>\r\n                    <TaskCreateForm\r\n                        toggleTaskModal={toggleTaskModal}\r\n                        currentUser={currentUser}\r\n                        saveTask={saveTask}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport \"./Task.css\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Typography, Button } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        display: 'flex',\r\n        overflow: 'auto',\r\n        position: 'relative',\r\n        flexDirection: 'column',\r\n    },\r\n    fixedHeight: {\r\n        height: 270,\r\n    },\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        bottom: 2\r\n    }\r\n}));\r\n\r\nexport default ({ task, deleteCompletedTask }) => {\r\n    const classes = useStyles()\r\n    const date = new Date(task.expirationDate).toLocaleDateString()\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight)\r\n\r\n    const removeTask = (id) => {\r\n        deleteCompletedTask(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {task &&\r\n                <Grid item xs={12} md={4} lg={3}>\r\n                    <Paper className={fixedHeightPaper}>\r\n                        <Typography className=\"taskListTyopgraphy\">\r\n                            <strong>Task: </strong>\r\n                            {task.text}\r\n                        </Typography>\r\n                        <Typography>\r\n                            <strong>Assigned To:</strong>\r\n                            {task.employee.fullName} <br />\r\n                        </Typography>\r\n                        <Typography>\r\n                            <strong>Expiration Date:</strong> {date}\r\n                        </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.deleteButton}\r\n                            onClick={() => removeTask(task.id)}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </Paper>\r\n                </Grid>\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Container, makeStyles, Grid, TextField, Button } from '@material-ui/core';\r\nimport { EmployeeContext } from '../../providers/EmployeeProvider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default ({ toggleEditTaskModal, currentUser, updateTask, taskObj }) => {\r\n    const classes = useStyles()\r\n    const [updatedTask, setTask] = useState(taskObj);\r\n    const { getEmployeesByUserId, employees } = useContext(EmployeeContext);\r\n    const [selectedDate, setSelectedDate] = React.useState(new Date(taskObj.expirationDate));\r\n\r\n    const handleDateChange = (date) => {\r\n        setSelectedDate(date);\r\n        const dateMod = new Date(date)\r\n        const milliseconds = dateMod.getTime()\r\n        const timeOffset = dateMod.getTimezoneOffset() * 60000\r\n        const dateMinusOffset = (milliseconds - timeOffset)\r\n        const formattedDate = new Date(dateMinusOffset).toJSON()\r\n        const newTask = Object.assign({}, updatedTask);\r\n        newTask.expirationDate = formattedDate;\r\n        setTask(newTask);\r\n    }\r\n\r\n    const editTask = () => {\r\n        updateTask({\r\n            id: updatedTask.id,\r\n            text: updatedTask.text,\r\n            userId: currentUser.id,\r\n            creationDate: updatedTask.creationDate,\r\n            expirationDate: updatedTask.expirationDate,\r\n            isCompleted: updatedTask.isCompleted,\r\n            employeeId: updatedTask.employeeId\r\n        });\r\n        toggleEditTaskModal()\r\n    }\r\n\r\n    const handleControlledInputChange = (event) => {\r\n        const newTask = Object.assign({}, updatedTask);\r\n        newTask[event.target.name] = event.target.value;\r\n        setTask(newTask);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEmployeesByUserId(currentUser.id)\r\n    }, [])\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <form className={classes.form} onSubmit={e => {\r\n                e.preventDefault()\r\n                editTask()\r\n            }}>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <TextField\r\n                            onChange={handleControlledInputChange}\r\n                            autoComplete=\"text\"\r\n                            name=\"text\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            defaultValue={taskObj.text}\r\n                            fullWidth\r\n                            id=\"taskText\"\r\n                            multiline\r\n                            rows={5}\r\n                            autoFocus\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    name=\"expirationDate\"\r\n                                    margin=\"normal\"\r\n                                    id=\"expirationDate\"\r\n                                    value={selectedDate}\r\n                                    onChange={handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                            </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                        <Grid item xs={12} sm={12}>\r\n                            <FormControl className={classes.formControl}>\r\n                                <Select\r\n                                    native=\"true\"\r\n                                    variant=\"outlined\"\r\n                                    defaultValue={taskObj.employeeId}\r\n                                    onChange={handleControlledInputChange}\r\n                                    inputProps={{\r\n                                        name: 'employeeId',\r\n                                        id: 'employee',\r\n                                    }}\r\n                                >\r\n                                    <option value={taskObj.employeeId}>\r\n                                        {taskObj.employee.firstName} {taskObj.employee.lastName}\r\n                                    </option>\r\n                                    {\r\n                                        employees.map(e => {\r\n                                            return (e.id === taskObj.employeeId)\r\n                                                ? null\r\n                                                :\r\n                                                <option key={e.id} value={e.id}>\r\n                                                    {e.firstName} {e.lastName}\r\n                                                </option>\r\n                                        })\r\n                                    }\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport TaskEditForm from './TaskEditForm';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloseOutlinedIcon from '@material-ui/icons/CloseOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    paper: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        // border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nexport default ({ toggleEditTaskModal, editTaskModal, currentUser, updateTask, taskObj }) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                aria-labelledby=\"transition-modal-title\"\r\n                aria-describedby=\"transition-modal-description\"\r\n                className={classes.modal}\r\n                open={editTaskModal}\r\n            >\r\n                <div className={classes.paper}>\r\n                    <IconButton onClick={toggleEditTaskModal}>\r\n                        <CloseOutlinedIcon />\r\n                    </IconButton>\r\n                    <h2 id=\"transition-modal-title\">Edit Task</h2>\r\n                    <TaskEditForm\r\n                        toggleEditTaskModal={toggleEditTaskModal}\r\n                        currentUser={currentUser}\r\n                        updateTask={updateTask}\r\n                        taskObj={taskObj}\r\n                    />\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport \"./Task.css\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, Paper, Typography, Button, FormControlLabel, Checkbox, Divider } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardspace: {\r\n        display: \"flex\",\r\n        minHeight: 200,\r\n        wordWrap: \"break-word\",\r\n        flexDirection: \"column\",\r\n        position: \"relative\",\r\n        paddingLeft: 15,\r\n        paddingTop: 5\r\n    }\r\n}));\r\n\r\nexport default ({ task, updateTask, deleteTask, toggleEditTaskModal, setTaskObj }) => {\r\n    const date = new Date(task.expirationDate).toLocaleDateString()\r\n    const classes = useStyles()\r\n\r\n    const removeTask = (id) => {\r\n        deleteTask(id)\r\n    }\r\n\r\n    const completeTask = (taskObj) => {\r\n        taskObj.isCompleted = true\r\n        updateTask(taskObj)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {task &&\r\n                <Grid item xs={12} md={4} lg={4}>\r\n                    <Paper className={classes.cardspace}>\r\n                        <Typography>\r\n                            <strong>Task:</strong> {task.text}\r\n                        </Typography>\r\n                        <Typography>\r\n                            <strong>Assigned To:</strong>\r\n                            {task.employee.firstName + \" \" + task.employee.lastName} <br />\r\n                        </Typography>\r\n                        <Typography>\r\n                            <strong>Expiration Date:</strong> {date}\r\n                        </Typography>\r\n                        <Divider />\r\n                        <FormControlLabel\r\n                            control={<Checkbox name=\"checkedA\" color=\"primary\"\r\n                                onChange={() => completeTask(task)} />}\r\n                            label=\"Mark as completed\"\r\n                        />\r\n                        <div className=\"editDeleteButtonsContainer\">\r\n                            <Button\r\n                                className=\"editButton\"\r\n                                variant=\"contained\"\r\n                                onClick={() => {\r\n                                    setTaskObj(task)\r\n                                    toggleEditTaskModal()\r\n                                }}>\r\n                                Edit\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"secondary\"\r\n                                className=\"deleteButton\"\r\n                                onClick={() => removeTask(task.id)}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport { Container, Grid, Button, CircularProgress } from '@material-ui/core';\r\nimport { TaskContext } from '../../providers/TaskProvider';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TaskCreateModal from './TaskCreateModal';\r\nimport CompletedTask from './CompletedTask';\r\nimport TaskEditModal from './TaskEditModal';\r\nimport SideNav from '../SideNav';\r\nimport Task from './Task';\r\nimport \"./Task.css\";\r\n\r\nconst drawerWidth = 270;\r\n//test comment\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    content: {\r\n        backgroundColor: \"#EBECF0\",\r\n        flexGrow: 1,\r\n        height: '100vh',\r\n        overflow: 'auto',\r\n    },\r\n    container: {\r\n        paddingTop: theme.spacing(4),\r\n        paddingBottom: theme.spacing(4),\r\n    }\r\n}));\r\n\r\nexport default () => {\r\n    const classes = useStyles()\r\n    const [taskObj, setTaskObj] = useState({})\r\n    const [loading, setLoading] = useState(true)\r\n    const [taskModal, setTaskModal] = useState(false)\r\n    const toggleTaskModal = () => setTaskModal(!taskModal)\r\n    const [viewingNewTasks, setViewingNewTasks] = useState(true)\r\n    const toggleView = () => setViewingNewTasks(!viewingNewTasks)\r\n    const [editTaskModal, setEditTaskModal] = useState(false)\r\n    const toggleEditTaskModal = () => setEditTaskModal(!editTaskModal)\r\n    const currentUser = JSON.parse(sessionStorage.getItem(\"user\"))\r\n    const [viewButton, setViewButton] = useState(\"View Completed Tasks\")\r\n    const {\r\n        getIncompleteTasksByUserId,\r\n        getCompletedTasksByUserId,\r\n        tasks,\r\n        deleteTask,\r\n        updateTask,\r\n        saveTask,\r\n        deleteCompletedTask,\r\n        completedTasks\r\n    } = useContext(TaskContext)\r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            if (viewingNewTasks) {\r\n                setViewButton(\"View Completed Tasks\");\r\n                await getIncompleteTasksByUserId(currentUser.id);\r\n            } else {\r\n                setViewButton(\"View Current Tasks\");\r\n                await getCompletedTasksByUserId(currentUser.id);\r\n            }\r\n            setLoading(false)\r\n        }\r\n        fetchData();\r\n    }, [viewingNewTasks])\r\n\r\n    return (\r\n        <>\r\n            {loading ?\r\n                <CircularProgress />\r\n                :\r\n                <div className={classes.root}>\r\n                    <CssBaseline />\r\n                    <SideNav />\r\n                    <main className={classes.content}>\r\n                        <br />\r\n                        <Typography variant=\"h4\" align=\"center\">\r\n                            Manage Tasks\r\n                    </Typography>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            className=\"listToggleButton\"\r\n                            onClick={toggleView}\r\n                        >\r\n                            {viewButton}\r\n                        </Button>\r\n                        <Button\r\n                            onClick={toggleTaskModal}\r\n                            color=\"primary\"\r\n                            variant=\"contained\"\r\n                        >\r\n                            Add new task\r\n                    </Button>\r\n                        <Container maxWidth=\"lg\" className={classes.container}>\r\n                            <Grid container spacing={4}>\r\n                                {\r\n                                    (viewingNewTasks) ?\r\n                                        tasks.map(t => (\r\n                                            <Task\r\n                                                key={t.id}\r\n                                                task={t}\r\n                                                setTaskObj={setTaskObj}\r\n                                                updateTask={updateTask}\r\n                                                deleteTask={deleteTask}\r\n                                                toggleEditTaskModal={toggleEditTaskModal}\r\n                                            />\r\n                                        ))\r\n                                        : completedTasks.map(t => (\r\n                                            <CompletedTask\r\n                                                task={t}\r\n                                                key={t.id}\r\n                                                currentUser={currentUser}\r\n                                                deleteCompletedTask={deleteCompletedTask}\r\n                                            />\r\n                                        ))\r\n                                }\r\n                            </Grid>\r\n                        </Container>\r\n                        <TaskCreateModal\r\n                            currentUser={currentUser}\r\n                            toggleTaskModal={toggleTaskModal}\r\n                            taskModal={taskModal}\r\n                            saveTask={saveTask}\r\n                        />\r\n                        <TaskEditModal\r\n                            toggleEditTaskModal={toggleEditTaskModal}\r\n                            currentUser={currentUser}\r\n                            editTaskModal={editTaskModal}\r\n                            updateTask={updateTask}\r\n                            taskObj={taskObj}\r\n                        />\r\n                    </main>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}","import React, { useState, useContext } from \"react\";\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Button } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        // backgroundColor: theme.palette.secondary.main,\r\n        backgroundColor: \"#32CD32\"\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Register() {\r\n    const history = useHistory();\r\n    const { register } = useContext(UserContext);\r\n\r\n    const classes = useStyles();\r\n    const [firstName, setFirstName] = useState();\r\n    const [lastName, setLastName] = useState();\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [confirmPassword, setConfirmPassword] = useState();\r\n    const [businessName, setBusinessName] = useState();\r\n    const [image, setImage] = useState(\"\");\r\n\r\n\r\n\r\n    const registerClick = (e) => {\r\n        e.preventDefault();\r\n        if (password && password !== confirmPassword) {\r\n            alert(\"Passwords don't match. Do better.\");\r\n        } else {\r\n            const userProfile = { firstName, lastName, email, password, businessName, image };\r\n            register(userProfile, password)\r\n                .then(() => history.push(\"/\"));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign up\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={registerClick}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                onChange={e => setFirstName(e.target.value)}\r\n                                autoComplete=\"fname\"\r\n                                name=\"firstName\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"firstName\"\r\n                                label=\"First Name\"\r\n                                autoFocus\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <TextField\r\n                                onChange={e => setLastName(e.target.value)}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"lastName\"\r\n                                label=\"Last Name\"\r\n                                name=\"lastName\"\r\n                                autoComplete=\"lname\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={e => setEmail(e.target.value)}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"email\"\r\n                                label=\"Email Address\"\r\n                                name=\"email\"\r\n                                autoComplete=\"email\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={e => setPassword(e.target.value)}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"password\"\r\n                                label=\"Password\"\r\n                                type=\"password\"\r\n                                id=\"password\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={e => setConfirmPassword(e.target.value)}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"confirmPassword\"\r\n                                label=\"Confirm Password\"\r\n                                type=\"password\"\r\n                                id=\"confirmPassword\"\r\n                                autoComplete=\"current-password\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                onChange={e => setBusinessName(e.target.value)}\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                name=\"businessName\"\r\n                                label=\"Business Name\"\r\n                                type=\"businessName\"\r\n                                id=\"businessName\"\r\n                                autoComplete=\"current-businessName\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign Up\r\n                     </Button>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Grid item>\r\n                            <Link to=\"/login\" variant=\"body2\">\r\n                                {\"Already have an account? Sign in\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React, { useState, useContext } from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Button, Container } from \"@material-ui/core\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: \"#32CD32\",\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [email, setEmail] = useState();\r\n    const { login } = useContext(UserContext);\r\n    const [password, setPassword] = useState();\r\n\r\n    const loginSubmit = (e) => {\r\n        e.preventDefault();\r\n        login(email, password)\r\n            .then(() => history.push(\"/\"))\r\n            .catch(() => alert(\"Invalid email or password\"));\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} onSubmit={loginSubmit}>\r\n                    <TextField\r\n                        onChange={e => setEmail(e.target.value)}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item>\r\n                            <Link to=\"register\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import React, { useContext, useState } from \"react\";\r\nimport FoodSafetyResources from \"./foodSafetyResources/FoodSafetyResources\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport CredentialList from \"./credential/CredentialList\";\r\nimport AccountEditForm from \"./account/AccountEditForm\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport AuditCreateForm from \"./audit/AuditCreateForm\";\r\nimport AuditDetails from \"./audit/AuditDetails\";\r\nimport Dashboard from \"./dashboard/Dashboard\";\r\nimport AuditList from \"./audit/AuditList\";\r\nimport TaskList from \"./task/TaskList\";\r\nimport Register from \"./Register\";\r\nimport Login from \"./Login\";\r\n\r\n\r\n\r\nexport default function ApplicationViews() {\r\n    const { isLoggedIn } = useContext(UserContext);\r\n    const [barChartView, setBarChartView] = useState(true)\r\n    const toggleChartView = () => setBarChartView(!barChartView)\r\n    console.log(React.version)\r\n    return (\r\n        <main>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    {isLoggedIn ?\r\n                        <Dashboard\r\n                            barChartView={barChartView}\r\n                            toggleChartView={toggleChartView}\r\n                        />\r\n                        : <Redirect to=\"/login\" />\r\n                    }\r\n                </Route>\r\n\r\n                <Route path=\"/login\">\r\n                    <Login />\r\n                </Route>\r\n\r\n                <Route path=\"/register\">\r\n                    <Register />\r\n                </Route>\r\n\r\n                <Route path=\"/tasks\">\r\n                    {isLoggedIn ? <TaskList /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n\r\n                <Route path=\"/credentials\">\r\n                    {isLoggedIn ? <CredentialList /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n\r\n                <Route path=\"/audits\">\r\n                    {isLoggedIn ? <AuditList /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n\r\n                <Route path=\"/audit/:id\">\r\n                    {isLoggedIn ? <AuditDetails /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n\r\n                <Route path=\"/createAudit\">\r\n                    {isLoggedIn ? <AuditCreateForm /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n\r\n                <Route path=\"/accountSettings\">\r\n                    {isLoggedIn ? <AccountEditForm /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n\r\n                <Route path=\"/resources\">\r\n                    {isLoggedIn ? <FoodSafetyResources /> : <Redirect to=\"/login\" />}\r\n                </Route>\r\n            </Switch>\r\n        </main>\r\n    );\r\n};","import React, { useContext } from 'react';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { UserContext } from '../providers/UserProvider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n    const classes = useStyles()\r\n    const history = useHistory()\r\n    const { isLoggedIn } = useContext(UserContext)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" className=\"appBar\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                        FoodLocker\r\n                    </Typography>\r\n                    {isLoggedIn &&\r\n                        <>\r\n                            <Tooltip title=\"Account Settings\" arrow>\r\n                                <IconButton\r\n                                    color=\"inherit\"\r\n                                    className=\"settingsButton\"\r\n                                    onClick={() => {\r\n                                        history.push(\"/accountSettings\")\r\n                                    }}\r\n                                >\r\n                                    <SettingsIcon />\r\n                                </IconButton>\r\n                            </Tooltip>\r\n                        </>\r\n                    }\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\n//test comment to check git repo    ","import React from 'react';\r\nimport ViolationCategoryProvider from './providers/ViolationCategoryProvider';\r\nimport AuditViolationProvider from './providers/AuditViolationProvider';\r\nimport CredentialProvider from './providers/CredentialProvider';\r\nimport EmployeeProvider from './providers/EmployeeProvider';\r\nimport ApplicationViews from \"./components/ApplicationViews\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { UserProvider } from './providers/UserProvider';\r\nimport AuditProvider from './providers/AuditProvider';\r\nimport TaskProvider from './providers/TaskProvider';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <UserProvider>\r\n        <TaskProvider>\r\n          <EmployeeProvider>\r\n            <CredentialProvider>\r\n              <AuditProvider>\r\n                <AuditViolationProvider>\r\n                  <ViolationCategoryProvider>\r\n                    <Header />\r\n                    <ApplicationViews />\r\n                  </ViolationCategoryProvider>\r\n                </AuditViolationProvider>\r\n              </AuditProvider>\r\n            </CredentialProvider>\r\n          </EmployeeProvider>\r\n        </TaskProvider>\r\n      </UserProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport * as firebase from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n};\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}